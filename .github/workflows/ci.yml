name: Backend CI (Development Only)

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '22.17.1'

jobs:
  # バックエンド開発CI（テスト・ビルドのみ）
  test-and-build:
    name: Test & Build Backend
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ap_study_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup test database
        run: |
          npm run db:generate
          npm run db:push
        env:
          DATABASE_URL: postgresql://postgres:password@localhost:5432/ap_study_test

      - name: Run TypeScript build
        run: npm run build

      - name: Run TDD tests
        run: npm run tdd:cycle || echo "TDD tests will be implemented with feature development"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: dist
          retention-days: 7

  # セキュリティスキャン
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'

      - name: NPM Audit
        run: npm audit --audit-level=high

  # 本番環境準備完了まで全てのデプロイを無効化
  # 
  # 以下のデプロイジョブは本番環境（Vercel/Railway/Supabase）の
  # 設定完了まで無効化されています
  #
  # 有効化する場合の前提条件:
  # 1. 本番環境のセットアップ完了
  # 2. 必要なSecrets設定完了 (VERCEL_TOKEN, RAILWAY_TOKEN等)
  # 3. 環境変数・ドメイン設定完了
  # 4. デプロイ戦略の最終決定
  #
  # deploy-production:
  #   name: Deploy to Production (DISABLED)
  #   runs-on: ubuntu-latest
  #   needs: [test-and-build, security-scan]
  #   if: false  # DISABLED until production environment is ready
  #
  # deploy-preview:
  #   name: Deploy Preview (DISABLED)
  #   runs-on: ubuntu-latest
  #   needs: [test-and-build]
  #   if: false  # DISABLED until production environment is ready

  # 開発完了通知（mainブランチのみ）
  development-ready:
    name: Development Ready
    runs-on: ubuntu-latest
    needs: [test-and-build, security-scan]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Development ready notification
        run: |
          echo "✅ Backend development checks completed!"
          echo "📊 TypeScript build: Success"
          echo "🧪 Tests: Ready for TDD development"
          echo "🔒 Security: Scan completed"
          echo ""
          echo "⚠️  Production deployment: DISABLED"
          echo "📝 Next: Setup production environment when ready"