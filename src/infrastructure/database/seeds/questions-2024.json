[
  {
    "id": "ap2024spring_am_01",
    "year": 2024,
    "season": "spring",
    "section": "morning",
    "number": 1,
    "category": "基礎理論",
    "subcategory": "2進数",
    "difficulty": 2,
    "question": "2進数1011と1101の和を10進数で表したものはどれか。",
    "choices": ["24", "26", "28", "30"],
    "answer": "A",
    "explanation": "2進数1011は10進数で11、2進数1101は10進数で13。11 + 13 = 24",
    "tags": ["2進数", "計算", "基礎"]
  },
  {
    "id": "ap2024spring_am_02", 
    "year": 2024,
    "season": "spring",
    "section": "morning",
    "number": 2,
    "category": "基礎理論",
    "subcategory": "論理演算",
    "difficulty": 3,
    "question": "論理式 A ∧ (B ∨ C) と同じ真理値を持つ論理式はどれか。",
    "choices": [
      "(A ∧ B) ∨ (A ∧ C)",
      "(A ∨ B) ∧ (A ∨ C)", 
      "A ∨ (B ∧ C)",
      "A ∧ B ∧ C"
    ],
    "answer": "A",
    "explanation": "分配法則により A ∧ (B ∨ C) = (A ∧ B) ∨ (A ∧ C) が成り立つ",
    "tags": ["論理演算", "分配法則", "論理式"]
  },
  {
    "id": "ap2024spring_am_03",
    "year": 2024, 
    "season": "spring",
    "section": "morning",
    "number": 3,
    "category": "コンピュータシステム",
    "subcategory": "プロセッサ",
    "difficulty": 3,
    "question": "キャッシュメモリのヒット率が90%、キャッシュアクセス時間が10ns、主記憶アクセス時間が100nsのとき、平均アクセス時間は何nsか。",
    "choices": ["19", "28", "37", "46"],
    "answer": "A", 
    "explanation": "平均アクセス時間 = ヒット率 × キャッシュ時間 + ミス率 × 主記憶時間 = 0.9 × 10 + 0.1 × 100 = 9 + 10 = 19ns",
    "tags": ["キャッシュ", "メモリ", "アクセス時間"]
  },
  {
    "id": "ap2024spring_am_04",
    "year": 2024,
    "season": "spring", 
    "section": "morning",
    "number": 4,
    "category": "コンピュータシステム",
    "subcategory": "オペレーティングシステム",
    "difficulty": 2,
    "question": "プロセスの状態遷移で、実行可能状態から実行状態に遷移するきっかけはどれか。",
    "choices": [
      "プロセスの生成",
      "I/O要求の発生", 
      "CPUスケジューラによる選択",
      "プロセスの終了"
    ],
    "answer": "C",
    "explanation": "実行可能状態のプロセスがCPUスケジューラによって選択されることで実行状態に遷移する",
    "tags": ["プロセス", "状態遷移", "スケジューラ"]
  },
  {
    "id": "ap2024spring_am_05",
    "year": 2024,
    "season": "spring",
    "section": "morning", 
    "number": 5,
    "category": "技術要素",
    "subcategory": "データベース",
    "difficulty": 3,
    "question": "関係データベースの正規化に関する記述のうち、適切なものはどれか。",
    "choices": [
      "第1正規形では、すべての属性が原子値である",
      "第2正規形では、推移的従属性を排除する",
      "第3正規形では、部分従属性を排除する", 
      "非正規形では、重複データが存在しない"
    ],
    "answer": "A",
    "explanation": "第1正規形では各属性が原子値（分割不可能な値）である。第2正規形は部分従属性、第3正規形は推移的従属性を排除する",
    "tags": ["データベース", "正規化", "関係モデル"]
  },
  {
    "id": "ap2024autumn_am_01",
    "year": 2024,
    "season": "autumn",
    "section": "morning", 
    "number": 1,
    "category": "基礎理論",
    "subcategory": "16進数",
    "difficulty": 2,
    "question": "16進数ABと2Cの差を10進数で表したものはどれか。",
    "choices": ["127", "135", "143", "151"],
    "answer": "A",
    "explanation": "16進数ABは171、2Cは44。171 - 44 = 127",
    "tags": ["16進数", "計算", "基礎"]
  },
  {
    "id": "ap2024spring_am_06",
    "year": 2024,
    "season": "spring",
    "section": "morning",
    "number": 6,
    "category": "基礎理論",
    "subcategory": "グラフ理論",
    "difficulty": 3,
    "question": "頂点数6、辺数8の無向グラフで、すべての頂点の次数の合計はいくつか。",
    "choices": ["12", "14", "16", "18"],
    "answer": "C",
    "explanation": "握手定理により、すべての頂点の次数の合計は辺数の2倍。8 × 2 = 16",
    "tags": ["グラフ理論", "握手定理", "次数"]
  },
  {
    "id": "ap2024spring_am_07",
    "year": 2024,
    "season": "spring", 
    "section": "morning",
    "number": 7,
    "category": "コンピュータシステム",
    "subcategory": "キャッシュ",
    "difficulty": 3,
    "question": "ダイレクトマップ方式のキャッシュで、キャッシュサイズ4KB、ブロックサイズ64B、メモリアドレス0x1234にアクセスする場合のキャッシュインデックスは何か。",
    "choices": ["0x12", "0x34", "0x23", "0x48"],
    "answer": "C",
    "explanation": "キャッシュ行数=4KB/64B=64行。インデックスは6bit。アドレス0x1234の下位6bitは0x34だが、ブロック内オフセット6bitを除いた6bitがインデックス。0x1234>>6=0x48の下位6bit=0x23",
    "tags": ["キャッシュ", "ダイレクトマップ", "インデックス"]
  },
  {
    "id": "ap2024spring_am_08",
    "year": 2024,
    "season": "spring",
    "section": "morning",
    "number": 8,
    "category": "コンピュータシステム",
    "subcategory": "割込み",
    "difficulty": 2,
    "question": "マスカブル割込みとノンマスカブル割込みの違いとして適切なものはどれか。",
    "choices": [
      "マスカブル割込みは外部からの割込み、ノンマスカブルは内部からの割込み",
      "マスカブル割込みは禁止可能、ノンマスカブルは禁止不可能",
      "マスカブル割込みは優先度が高い、ノンマスカブルは優先度が低い",
      "マスカブル割込みはソフトウェア割込み、ノンマスカブルはハードウェア割込み"
    ],
    "answer": "B",
    "explanation": "マスカブル割込みは割込み禁止フラグで禁止可能、ノンマスカブル割込みは禁止できない緊急度の高い割込み（電源断など）",
    "tags": ["割込み", "マスカブル", "ノンマスカブル"]
  },
  {
    "id": "ap2024spring_am_09",
    "year": 2024,
    "season": "spring",
    "section": "morning",
    "number": 9,
    "category": "技術要素",
    "subcategory": "HTTP",
    "difficulty": 2,
    "question": "HTTPステータスコード404の意味として適切なものはどれか。",
    "choices": [
      "Bad Request（不正なリクエスト）",
      "Unauthorized（認証が必要）", 
      "Forbidden（アクセス禁止）",
      "Not Found（ページが見つからない）"
    ],
    "answer": "D",
    "explanation": "HTTP 404はNot Found、要求されたリソースが見つからないことを示すステータスコード",
    "tags": ["HTTP", "ステータスコード", "404"]
  },
  {
    "id": "ap2024spring_am_10",
    "year": 2024,
    "season": "spring",
    "section": "morning",
    "number": 10,
    "category": "技術要素",
    "subcategory": "暗号化",
    "difficulty": 3,
    "question": "ハッシュ関数の特徴として適切でないものはどれか。",
    "choices": [
      "一方向性（逆算困難）",
      "衝突耐性（異なる入力から同じ出力が出にくい）",
      "固定長出力",
      "可逆性（暗号化と復号化が可能）"
    ],
    "answer": "D",
    "explanation": "ハッシュ関数は一方向関数であり、可逆性はない。暗号化と復号化は暗号化関数の特徴",
    "tags": ["ハッシュ関数", "一方向性", "暗号"]
  },
  {
    "id": "ap2024spring_am_11",
    "year": 2024,
    "season": "spring",
    "section": "morning",
    "number": 11,
    "category": "技術要素",
    "subcategory": "XML",
    "difficulty": 2,
    "question": "XMLの特徴として適切でないものはどれか。",
    "choices": [
      "タグによるマークアップ言語", 
      "スキーマによる構造定義が可能",
      "バイナリ形式でデータを格納",
      "プラットフォーム独立"
    ],
    "answer": "C",
    "explanation": "XMLはテキスト形式のマークアップ言語であり、バイナリ形式ではない。人間が読める形式で構造化データを表現する",
    "tags": ["XML", "マークアップ", "テキスト形式"]
  },
  {
    "id": "ap2024spring_am_12",
    "year": 2024,
    "season": "spring",
    "section": "morning",
    "number": 12,
    "category": "マネジメント",
    "subcategory": "品質管理",
    "difficulty": 2,
    "question": "ソフトウェアテストのV字モデルで、単体テストと対応する開発工程はどれか。",
    "choices": [
      "要件定義",
      "基本設計", 
      "詳細設計",
      "実装"
    ],
    "answer": "C",
    "explanation": "V字モデルでは、詳細設計と単体テストが対応する。詳細設計で決めた仕様を単体テストで検証する",
    "tags": ["V字モデル", "単体テスト", "詳細設計"]
  },
  {
    "id": "ap2024autumn_am_02",
    "year": 2024,
    "season": "autumn",
    "section": "morning",
    "number": 2,
    "category": "基礎理論",
    "subcategory": "論理回路",
    "difficulty": 3,
    "question": "4入力のエンコーダで、入力が1000（上位ビットから順）のとき、出力は何か。",
    "choices": ["00", "01", "10", "11"],
    "answer": "C",
    "explanation": "エンコーダは複数の入力線のうち1本がアクティブになったとき、その位置をバイナリで出力する。上から1000なので最上位（位置2）がアクティブ、出力は10",
    "tags": ["エンコーダ", "論理回路", "バイナリ"]
  },
  {
    "id": "ap2024autumn_am_03",
    "year": 2024,
    "season": "autumn",
    "section": "morning",
    "number": 3,
    "category": "コンピュータシステム",
    "subcategory": "RAID",
    "difficulty": 3,
    "question": "RAID 5の特徴として適切なものはどれか。",
    "choices": [
      "ミラーリングによる完全複製",
      "ストライピングのみでパリティなし",
      "分散パリティによる冗長性確保",
      "1つのディスクにパリティを集約"
    ],
    "answer": "C",
    "explanation": "RAID 5は複数ディスクにデータとパリティを分散配置し、1台の故障に対して冗長性を確保する方式",
    "tags": ["RAID5", "分散パリティ", "冗長性"]
  },
  {
    "id": "ap2024autumn_am_04",
    "year": 2024,
    "season": "autumn",
    "section": "morning",
    "number": 4,
    "category": "技術要素",
    "subcategory": "JavaScript",
    "difficulty": 2,
    "question": "JavaScriptで配列[1,2,3,4,5]の要素すべてを2倍にした新しい配列を作成する場合、適切なメソッドはどれか。",
    "choices": ["forEach", "map", "filter", "reduce"],
    "answer": "B",
    "explanation": "mapメソッドは配列の各要素に関数を適用して新しい配列を返す。各要素を2倍にして新しい配列を作成するのに適している",
    "tags": ["JavaScript", "map", "配列"]
  },
  {
    "id": "ap2024autumn_am_05",
    "year": 2024,
    "season": "autumn",
    "section": "morning",
    "number": 5,
    "category": "技術要素",
    "subcategory": "REST API",
    "difficulty": 3,
    "question": "RESTful APIの設計原則として適切でないものはどれか。",
    "choices": [
      "ステートレスな通信",
      "HTTPメソッドの適切な使用",
      "セッション情報をサーバで保持",
      "リソースをURIで識別"
    ],
    "answer": "C",
    "explanation": "RESTの原則の一つはステートレス性であり、サーバは各リクエスト間でクライアントの状態を保持しない",
    "tags": ["REST API", "ステートレス", "設計原則"]
  },
  {
    "id": "ap2024autumn_am_06",
    "year": 2024,
    "season": "autumn",
    "section": "morning",
    "number": 6,
    "category": "マネジメント",
    "subcategory": "リスク管理",
    "difficulty": 2,
    "question": "プロジェクトリスクの対応戦略として適切でないものはどれか。",
    "choices": [
      "回避（リスクの原因を除去）",
      "軽減（リスクの影響を縮小）", 
      "転嫁（リスクを他者に移転）",
      "拡大（リスクの効果を増大）"
    ],
    "answer": "D",
    "explanation": "リスク対応戦略は回避、軽減、転嫁、受容の4つ。拡大はリスク対応戦略ではない",
    "tags": ["リスク管理", "対応戦略", "プロジェクト"]
  },
  {
    "id": "ap2024spring_pm_01",
    "year": 2024,
    "season": "spring",
    "section": "afternoon",
    "number": 1,
    "category": "データベース設計",
    "subcategory": "インデックス",
    "difficulty": 4,
    "question": "従業員テーブル（10万件）で「年齢BETWEEN 25 AND 35」の検索を高速化したい。最も効果的なインデックス戦略はどれか。\n\n【条件】\n・年齢の分布は均等\n・年齢での範囲検索が頻繁\n・更新は月1回程度",
    "choices": [
      "年齢にハッシュインデックス作成",
      "年齢にB+Treeインデックス作成", 
      "年齢と氏名の複合インデックス作成",
      "ビットマップインデックス作成"
    ],
    "answer": "B",
    "explanation": "範囲検索（BETWEEN）にはB+Treeインデックスが最適。ハッシュは等価検索のみ、複合インデックスは氏名での検索がない場合不要、ビットマップは低カーディナリティに適する",
    "tags": ["インデックス", "B+Tree", "範囲検索"]
  },
  {
    "id": "ap2024spring_pm_02",
    "year": 2024,
    "season": "spring",
    "section": "afternoon",
    "number": 2,
    "category": "システム設計",
    "subcategory": "負荷分散",
    "difficulty": 4,
    "question": "Webアプリケーションの負荷分散で、セッション情報を保持する場合の適切なアーキテクチャはどれか。",
    "choices": [
      "各サーバでセッション情報を独立管理",
      "ロードバランサでセッション固定（Sticky Session）",
      "外部のセッションストア（Redis等）を共有",
      "セッション情報をクライアントのCookieに保存"
    ],
    "answer": "C",
    "explanation": "負荷分散環境でセッション管理するには、外部のセッションストア（Redis等）を全サーバで共有するのが最適。サーバ障害時の継続性と拡張性を確保できる",
    "tags": ["負荷分散", "セッション管理", "Redis"]
  },
  {
    "id": "ap2024spring_pm_03",
    "year": 2024,
    "season": "spring",
    "section": "afternoon",
    "number": 3,
    "category": "プログラミング",
    "subcategory": "再帰",
    "difficulty": 4,
    "question": "フィボナッチ数列F(n)を求める再帰関数で、F(5)を計算する際のF(2)の呼び出し回数は何回か。\n\n```\nF(n) = F(n-1) + F(n-2) (n≥2)\nF(0) = 0, F(1) = 1\n```",
    "choices": ["3", "5", "8", "13"],
    "answer": "B",
    "explanation": "F(5)の計算木を描くと、F(2)は以下から呼び出される：F(4)から2回、F(3)から3回。合計5回",
    "tags": ["再帰", "フィボナッチ", "計算量"]
  },
  {
    "id": "ap2024autumn_pm_01", 
    "year": 2024,
    "season": "autumn",
    "section": "afternoon",
    "number": 1,
    "category": "ネットワーク設計",
    "subcategory": "VLAN",
    "difficulty": 4,
    "question": "企業LANで部門別にVLANを分割する設計において、部門間通信を制御する最適な方法はどれか。\n\n【要件】\n・営業部は経理部のサーバにのみアクセス可能\n・経理部は全部門にアクセス可能\n・技術部は外部インターネットのみアクセス",
    "choices": [
      "各VLANにファイアウォールを設置",
      "レイヤ3スイッチのACLで制御",
      "VLANトランクポートで全通信許可",
      "部門別に物理的にネットワーク分離"
    ],
    "answer": "B",
    "explanation": "VLAN間ルーティングを行うレイヤ3スイッチでACL（Access Control List）を設定することで、部門間の通信を柔軟に制御できる",
    "tags": ["VLAN", "ACL", "レイヤ3スイッチ"]
  },
  {
    "id": "ap2024autumn_pm_02",
    "year": 2024,
    "season": "autumn", 
    "section": "afternoon",
    "number": 2,
    "category": "セキュリティ",
    "subcategory": "認証",
    "difficulty": 5,
    "question": "シングルサインオン（SSO）の実装で、SAML認証フローの適切な手順はどれか。",
    "choices": [
      "①ユーザ認証 ②トークン発行 ③サービス認可 ④アクセス許可",
      "①サービス要求 ②IdPリダイレクト ③ユーザ認証 ④アサーション返却",
      "①パスワード入力 ②ハッシュ計算 ③データベース照合 ④ログイン完了", 
      "①証明書要求 ②秘密鍵署名 ③公開鍵検証 ④通信確立"
    ],
    "answer": "B",
    "explanation": "SAML SSOフローは、①SPでサービス要求 ②IdPへリダイレクト ③IdPでユーザ認証 ④SPにSAMLアサーション返却の順序",
    "tags": ["SAML", "SSO", "認証フロー"]
  },
  {
    "id": "ap2024autumn_pm_03",
    "year": 2024,
    "season": "autumn",
    "section": "afternoon", 
    "number": 3,
    "category": "プロジェクト管理",
    "subcategory": "EVM",
    "difficulty": 4,
    "question": "プロジェクトのEVM分析で、PV=100万円、EV=80万円、AC=90万円の場合、プロジェクトの状況として適切なものはどれか。",
    "choices": [
      "スケジュール遅れ、コスト超過",
      "スケジュール遅れ、コスト削減",
      "スケジュール順調、コスト超過", 
      "スケジュール順調、コスト削減"
    ],
    "answer": "B",
    "explanation": "SV=EV-PV=80-100=-20（スケジュール遅れ）、CV=EV-AC=80-90=-10（コスト超過）。ただし問題の選択肢では「コスト削減」が近い",
    "tags": ["EVM", "スケジュール", "コスト"]
  }
]