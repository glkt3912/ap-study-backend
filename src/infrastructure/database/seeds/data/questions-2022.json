[
  {
    "id": "ap2022spring_am_01",
    "year": 2022,
    "season": "spring",
    "section": "morning",
    "number": 1,
    "category": "基礎理論",
    "subcategory": "論理回路",
    "difficulty": 3,
    "question": "NAND回路2個を使ってNOT回路を構成するとき、正しい接続方法はどれか。",
    "choices": [
      "入力を両方のNAND回路に接続し、出力を直列接続",
      "1つのNAND回路の入力を同じ信号に接続",
      "2つのNAND回路を並列接続",
      "入力を交互に接続"
    ],
    "answer": "B",
    "explanation": "NAND回路の入力を同じ信号に接続すると、NOT回路として動作する（A NAND A = NOT A）",
    "tags": [
      "論理回路",
      "NAND",
      "NOT"
    ]
  },
  {
    "id": "ap2022spring_am_02",
    "year": 2022,
    "season": "spring",
    "section": "morning",
    "number": 2,
    "category": "コンピュータシステム",
    "subcategory": "割込み",
    "difficulty": 2,
    "question": "外部割込みが発生したとき、CPUが最初に行う処理はどれか。",
    "choices": [
      "割込みハンドラの実行",
      "プログラムカウンタの退避",
      "割込み要因の特定",
      "割込み禁止フラグの設定"
    ],
    "answer": "B",
    "explanation": "割込み発生時、まず現在の実行状況（プログラムカウンタなど）を退避してから割込み処理を開始する",
    "tags": [
      "割込み",
      "CPU",
      "プログラムカウンタ"
    ]
  },
  {
    "id": "ap2022autumn_am_01",
    "year": 2022,
    "season": "autumn",
    "section": "morning",
    "number": 1,
    "category": "技術要素",
    "subcategory": "SQL",
    "difficulty": 2,
    "question": "SQLのSELECT文で、重複行を除去する句はどれか。",
    "choices": [
      "UNIQUE",
      "DISTINCT",
      "REMOVE",
      "EXCLUDE"
    ],
    "answer": "B",
    "explanation": "SQLではDISTINCT句を使用して重複行を除去する",
    "tags": [
      "SQL",
      "DISTINCT",
      "データベース"
    ]
  },
  {
    "id": "ap2022spring_am_03",
    "year": 2022,
    "season": "spring",
    "section": "morning",
    "number": 3,
    "category": "基礎理論",
    "subcategory": "アルゴリズム",
    "difficulty": 3,
    "question": "バブルソートで配列[3,1,4,2]を昇順にソートする場合、比較回数は最大で何回か。",
    "choices": [
      "6",
      "8",
      "10",
      "12"
    ],
    "answer": "A",
    "explanation": "バブルソートの比較回数は n(n-1)/2。要素数4の場合、4×3/2 = 6回",
    "tags": [
      "バブルソート",
      "アルゴリズム",
      "計算量"
    ]
  },
  {
    "id": "ap2022spring_am_04",
    "year": 2022,
    "season": "spring",
    "section": "morning",
    "number": 4,
    "category": "コンピュータシステム",
    "subcategory": "並列処理",
    "difficulty": 3,
    "question": "マルチコアプロセッサでの並列処理において、プロセス間でデータを共有する際の同期制御として適切なものはどれか。",
    "choices": [
      "ポーリング",
      "セマフォ",
      "スケジューリング",
      "パイプライン"
    ],
    "answer": "B",
    "explanation": "セマフォは複数のプロセスが共有リソースにアクセスする際の排他制御を行う同期制御機構",
    "tags": [
      "並列処理",
      "セマフォ",
      "同期制御"
    ]
  },
  {
    "id": "ap2022autumn_am_02",
    "year": 2022,
    "season": "autumn",
    "section": "morning",
    "number": 2,
    "category": "技術要素",
    "subcategory": "ネットワーク",
    "difficulty": 2,
    "question": "OSI参照モデルの第4層（トランスポート層）の代表的なプロトコルはどれか。",
    "choices": [
      "IP",
      "TCP",
      "HTTP",
      "SMTP"
    ],
    "answer": "B",
    "explanation": "TCPはOSI参照モデルの第4層（トランスポート層）のプロトコル。信頼性のあるデータ転送を提供する",
    "tags": [
      "OSI",
      "TCP",
      "トランスポート層"
    ]
  },
  {
    "id": "ap2022spring_pm_01",
    "year": 2022,
    "season": "spring",
    "section": "afternoon",
    "number": 1,
    "category": "プログラミング",
    "subcategory": "オブジェクト指向",
    "difficulty": 4,
    "question": "オブジェクト指向プログラミングの継承において、スーパークラスのメソッドをサブクラスで再定義することを何というか。",
    "choices": [
      "オーバーロード",
      "オーバーライド",
      "ポリモーフィズム",
      "カプセル化"
    ],
    "answer": "B",
    "explanation": "オーバーライドは継承関係にあるクラスで、スーパークラスのメソッドをサブクラスで再定義すること",
    "tags": [
      "オブジェクト指向",
      "オーバーライド",
      "継承"
    ]
  },
  {
    "id": "ap2022spring_am_05",
    "year": 2022,
    "season": "spring",
    "section": "morning",
    "number": 5,
    "category": "基礎理論",
    "subcategory": "データ構造",
    "difficulty": 2,
    "question": "スタックを用いて中置記法の式「A+B*C」を後置記法に変換した結果はどれか。",
    "choices": [
      "ABC*+",
      "AB+C*",
      "A+BC*",
      "ABC+*"
    ],
    "answer": "A",
    "explanation": "中置記法「A+B*C」は演算子の優先順位により「A+(B*C)」となり、後置記法では「ABC*+」",
    "tags": [
      "スタック",
      "後置記法",
      "データ構造"
    ]
  },
  {
    "id": "ap2022spring_am_06",
    "year": 2022,
    "season": "spring",
    "section": "morning",
    "number": 6,
    "category": "コンピュータシステム",
    "subcategory": "メモリ管理",
    "difficulty": 3,
    "question": "仮想記憶システムでページ置換アルゴリズムLRU（Least Recently Used）を用いる場合、最も長時間参照されていないページを置換対象とする理由はどれか。",
    "choices": [
      "処理速度が最も速いため",
      "メモリ使用量が最も少ないため",
      "局所性の原理に基づいているため",
      "実装が最も簡単なため"
    ],
    "answer": "C",
    "explanation": "LRUアルゴリズムは時間的局所性の原理（最近使用されたページは再び使用される可能性が高い）に基づいている",
    "tags": [
      "仮想記憶",
      "LRU",
      "ページ置換"
    ]
  },
  {
    "id": "ap2022spring_am_07",
    "year": 2022,
    "season": "spring",
    "section": "morning",
    "number": 7,
    "category": "基礎理論",
    "subcategory": "確率・統計",
    "difficulty": 2,
    "question": "2つのサイコロを同時に投げるとき、出た目の和が8になる確率はどれか。",
    "choices": [
      "1/6",
      "5/36",
      "1/9",
      "7/36"
    ],
    "answer": "B",
    "explanation": "和が8になる組み合わせ：(2,6),(3,5),(4,4),(5,3),(6,2)の5通り。全36通りなので確率は5/36",
    "tags": [
      "確率",
      "組み合わせ",
      "数学"
    ]
  },
  {
    "id": "ap2022spring_am_08",
    "year": 2022,
    "season": "spring",
    "section": "morning",
    "number": 8,
    "category": "技術要素",
    "subcategory": "データベース",
    "difficulty": 3,
    "question": "関係データベースの正規化において、第3正規形の条件として適切なものはどれか。",
    "choices": [
      "すべての属性が原子値である",
      "部分関数従属がない",
      "推移関数従属がない",
      "結合従属がない"
    ],
    "answer": "C",
    "explanation": "第3正規形は第2正規形でかつ推移関数従属がない状態。推移関数従属の除去により冗長性を削減",
    "tags": [
      "データベース",
      "第3正規形",
      "正規化"
    ]
  },
  {
    "id": "ap2022spring_am_09",
    "year": 2022,
    "season": "spring",
    "section": "morning",
    "number": 9,
    "category": "コンピュータシステム",
    "subcategory": "キャッシュ",
    "difficulty": 3,
    "question": "キャッシュメモリのライトポリシーで、CPUからの書き込み時にキャッシュとメインメモリの両方に同時に書き込む方式はどれか。",
    "choices": [
      "ライトスルー",
      "ライトバック",
      "ライトアラウンド",
      "ライトアロケート"
    ],
    "answer": "A",
    "explanation": "ライトスルー方式は書き込み時にキャッシュとメインメモリの両方を同時に更新し、一貫性を保つ",
    "tags": [
      "キャッシュ",
      "ライトスルー",
      "メモリ"
    ]
  },
  {
    "id": "ap2022spring_am_10",
    "year": 2022,
    "season": "spring",
    "section": "morning",
    "number": 10,
    "category": "基礎理論",
    "subcategory": "グラフ理論",
    "difficulty": 4,
    "question": "有向グラフで、すべての頂点から出発してすべての頂点を通る経路が存在するとき、このグラフを何というか。",
    "choices": [
      "強連結グラフ",
      "弱連結グラフ",
      "完全グラフ",
      "二部グラフ"
    ],
    "answer": "A",
    "explanation": "強連結グラフは任意の2つの頂点間に双方向の経路が存在するグラフ",
    "tags": [
      "グラフ理論",
      "強連結",
      "有向グラフ"
    ]
  },
  {
    "id": "ap2022autumn_am_03",
    "year": 2022,
    "season": "autumn",
    "section": "morning",
    "number": 3,
    "category": "コンピュータシステム",
    "subcategory": "オペレーティングシステム",
    "difficulty": 3,
    "question": "プロセススケジューリングのラウンドロビン方式において、タイムクォンタムを短くしすぎた場合に生じる問題はどれか。",
    "choices": [
      "応答時間が長くなる",
      "コンテキストスイッチの回数が増える",
      "CPU使用率が低下する",
      "デッドロックが発生する"
    ],
    "answer": "B",
    "explanation": "タイムクォンタムが短すぎるとプロセス切り替え（コンテキストスイッチ）が頻繁に発生し、オーバーヘッドが増加する",
    "tags": [
      "ラウンドロビン",
      "プロセススケジューリング",
      "OS"
    ]
  },
  {
    "id": "ap2022autumn_am_04",
    "year": 2022,
    "season": "autumn",
    "section": "morning",
    "number": 4,
    "category": "技術要素",
    "subcategory": "暗号化",
    "difficulty": 2,
    "question": "共通鍵暗号方式の特徴として適切なものはどれか。",
    "choices": [
      "暗号化と復号化で異なる鍵を使用する",
      "鍵の配送問題がない",
      "デジタル署名に適している",
      "暗号化処理が高速である"
    ],
    "answer": "D",
    "explanation": "共通鍵暗号方式は同じ鍵で暗号化・復号化を行い、公開鍵暗号より処理速度が速いのが特徴",
    "tags": [
      "共通鍵暗号",
      "暗号化",
      "セキュリティ"
    ]
  },
  {
    "id": "ap2022autumn_am_05",
    "year": 2022,
    "season": "autumn",
    "section": "morning",
    "number": 5,
    "category": "基礎理論",
    "subcategory": "論理演算",
    "difficulty": 2,
    "question": "ド・モルガンの法則により、論理式 NOT(A AND B) と同値な式はどれか。",
    "choices": [
      "NOT A AND NOT B",
      "NOT A OR NOT B",
      "A OR B",
      "A AND B"
    ],
    "answer": "B",
    "explanation": "ド・モルガンの法則により NOT(A AND B) = (NOT A) OR (NOT B)",
    "tags": [
      "ド・モルガンの法則",
      "論理演算",
      "ブール代数"
    ]
  },
  {
    "id": "ap2022autumn_am_06",
    "year": 2022,
    "season": "autumn",
    "section": "morning",
    "number": 6,
    "category": "技術要素",
    "subcategory": "XML",
    "difficulty": 3,
    "question": "XMLスキーマの目的として適切なものはどれか。",
    "choices": [
      "XMLデータの検索を高速化する",
      "XMLデータの構造と制約を定義する",
      "XMLデータを圧縮する",
      "XMLデータを暗号化する"
    ],
    "answer": "B",
    "explanation": "XMLスキーマはXMLドキュメントの構造、要素の型、制約条件などを定義するために使用される",
    "tags": [
      "XMLスキーマ",
      "XML",
      "データ構造"
    ]
  },
  {
    "id": "ap2022autumn_am_07",
    "year": 2022,
    "season": "autumn",
    "section": "morning",
    "number": 7,
    "category": "コンピュータシステム",
    "subcategory": "記憶装置",
    "difficulty": 2,
    "question": "SSD（Solid State Drive）の特徴として適切でないものはどれか。",
    "choices": [
      "機械的な可動部品がない",
      "消費電力が少ない",
      "書き込み回数に制限がある",
      "容量あたりの単価が安い"
    ],
    "answer": "D",
    "explanation": "SSDは高速で低消費電力だが、容量あたりの単価はHDDより高いのが現状",
    "tags": [
      "SSD",
      "記憶装置",
      "ストレージ"
    ]
  },
  {
    "id": "ap2022autumn_am_08",
    "year": 2022,
    "season": "autumn",
    "section": "morning",
    "number": 8,
    "category": "基礎理論",
    "subcategory": "数値表現",
    "difficulty": 3,
    "question": "8ビットの2の補数表現で表せる整数の範囲はどれか。",
    "choices": [
      "-127～+127",
      "-128～+127",
      "-128～+128",
      "-256～+255"
    ],
    "answer": "B",
    "explanation": "8ビットの2の補数表現では-128（10000000）から+127（01111111）まで表現可能",
    "tags": [
      "2の補数",
      "数値表現",
      "ビット演算"
    ]
  },
  {
    "id": "ap2022autumn_pm_01",
    "year": 2022,
    "season": "autumn",
    "section": "afternoon",
    "number": 1,
    "category": "システム設計",
    "subcategory": "可用性",
    "difficulty": 4,
    "question": "システムの可用性99.9%を実現するための年間停止時間の上限は約何時間か。",
    "choices": [
      "8.76時間",
      "43.8時間",
      "87.6時間",
      "876時間"
    ],
    "answer": "A",
    "explanation": "可用性99.9%は年間停止時間が0.1%以内。1年=8760時間の0.1% = 8.76時間",
    "tags": [
      "可用性",
      "SLA",
      "稼働率"
    ]
  },
  {
    "id": "ap2022spring_am_11",
    "year": 2022,
    "season": "spring",
    "section": "morning",
    "number": 11,
    "category": "技術要素",
    "subcategory": "Web技術",
    "difficulty": 2,
    "question": "CSSで要素を中央寄せにするためのプロパティはどれか。",
    "choices": [
      "text-center",
      "margin: 0 auto",
      "align-center",
      "center: true"
    ],
    "answer": "B",
    "explanation": "CSSでブロック要素を水平中央寄せにするにはmargin: 0 autoを使用する",
    "tags": [
      "CSS",
      "レイアウト",
      "Webデザイン"
    ]
  },
  {
    "id": "ap2022spring_am_12",
    "year": 2022,
    "season": "spring",
    "section": "morning",
    "number": 12,
    "category": "技術要素",
    "subcategory": "JavaScript",
    "difficulty": 3,
    "question": "JavaScriptで配列[1, 2, 3, 4, 5]から偶数のみを抽出するコードはどれか。",
    "choices": [
      "arr.filter(x => x % 2 === 0)",
      "arr.map(x => x % 2 === 0)",
      "arr.forEach(x => x % 2 === 0)",
      "arr.reduce(x => x % 2 === 0)"
    ],
    "answer": "A",
    "explanation": "filter()メソッドは条件を満たす要素のみを抽出して新しい配列を作成する",
    "tags": [
      "JavaScript",
      "配列操作",
      "関数型"
    ]
  },
  {
    "id": "ap2022spring_am_13",
    "year": 2022,
    "season": "spring",
    "section": "morning",
    "number": 13,
    "category": "コンピュータシステム",
    "subcategory": "組み込みシステム",
    "difficulty": 3,
    "question": "組み込みシステムでリアルタイム処理が重要な理由はどれか。",
    "choices": [
      "コストを削減するため",
      "決められた時間内に応答する必要があるため",
      "省電力で動作させるため",
      "小型化を図るため"
    ],
    "answer": "B",
    "explanation": "組み込みシステムは制御対象とのタイミングが重要で、決められた時間内に応答する必要がある",
    "tags": [
      "組み込みシステム",
      "リアルタイム",
      "制御"
    ]
  },
  {
    "id": "ap2022spring_am_14",
    "year": 2022,
    "season": "spring",
    "section": "morning",
    "number": 14,
    "category": "基礎理論",
    "subcategory": "グラフアルゴリズム",
    "difficulty": 4,
    "question": "ダイクストラ法で最短経路を求める際、負の重みを持つ辺があるグラフでは正しい結果が得られない理由はどれか。",
    "choices": [
      "計算量が増えるため",
      "負の重みで無限ループが発生する可能性があるため",
      "メモリ使用量が増えるため",
      "アルゴリズムが複雑になるため"
    ],
    "answer": "B",
    "explanation": "ダイクストラ法は負の重みがあると、より短い経路を求めて無限ループに陥る可能性がある",
    "tags": [
      "ダイクストラ法",
      "最短経路",
      "グラフ理論"
    ]
  },
  {
    "id": "ap2022spring_am_15",
    "year": 2022,
    "season": "spring",
    "section": "morning",
    "number": 15,
    "category": "マネジメント",
    "subcategory": "ソフトウェアテスト",
    "difficulty": 2,
    "question": "ホワイトボックステストの特徴として適切なものはどれか。",
    "choices": [
      "内部構造を知らないでテストする",
      "内部構造を知ってテストする",
      "結合テストのみ実施する",
      "自動化ツールのみ使用する"
    ],
    "answer": "B",
    "explanation": "ホワイトボックステストはプログラムの内部構造やロジックを把握してテストする手法",
    "tags": [
      "ホワイトボックステスト",
      "ソフトウェアテスト",
      "品質保証"
    ]
  },
  {
    "id": "ap2022autumn_am_09",
    "year": 2022,
    "season": "autumn",
    "section": "morning",
    "number": 9,
    "category": "技術要素",
    "subcategory": "JSON",
    "difficulty": 2,
    "question": "JSON（JavaScript Object Notation）の特徴として適切でないものはどれか。",
    "choices": [
      "テキストベースのデータ形式",
      "軽量で可読性が高い",
      "Web APIで頻繁に使用される",
      "コメントを記述できる"
    ],
    "answer": "D",
    "explanation": "JSONはコメントをサポートしていない。コメントが必要な場合はJSON5などの拡張を使用",
    "tags": [
      "JSON",
      "データ形式",
      "Web API"
    ]
  },
  {
    "id": "ap2022autumn_am_10",
    "year": 2022,
    "season": "autumn",
    "section": "morning",
    "number": 10,
    "category": "基礎理論",
    "subcategory": "再帰アルゴリズム",
    "difficulty": 3,
    "question": "フィボナッチ数列を再帰で計算するアルゴリズムの時間計算量はどれか。",
    "choices": [
      "O(n)",
      "O(n log n)",
      "O(2^n)",
      "O(n!)"
    ],
    "answer": "C",
    "explanation": "単純な再帰でフィボナッチ数を計算すると、同じ値を繰り返し計算するためO(2^n)になる",
    "tags": [
      "フィボナッチ数列",
      "再帰",
      "計算量"
    ]
  },
  {
    "id": "ap2022autumn_am_11",
    "year": 2022,
    "season": "autumn",
    "section": "morning",
    "number": 11,
    "category": "コンピュータシステム",
    "subcategory": "RAID",
    "difficulty": 3,
    "question": "RAID 5の特徴として適切なものはどれか。",
    "choices": [
      "ミラーリングでデータを保護",
      "パリティ情報を分散配置",
      "ストライピングのみ実行",
      "完全なデータ複製"
    ],
    "answer": "B",
    "explanation": "RAID 5はデータとパリティ情報を複数のディスクに分散して配置し、1台の故障に耐える",
    "tags": [
      "RAID",
      "ディスクアレイ",
      "パリティ"
    ]
  },
  {
    "id": "ap2022autumn_am_12",
    "year": 2022,
    "season": "autumn",
    "section": "morning",
    "number": 12,
    "category": "技術要素",
    "subcategory": "UML",
    "difficulty": 2,
    "question": "UMLのクラス図で、クラス間の汎化関係を表す矢印はどれか。",
    "choices": [
      "白い三角形の矢印",
      "黒いダイヤモンド",
      "白いダイヤモンド",
      "単純な矢印"
    ],
    "answer": "A",
    "explanation": "UMLクラス図では汎化関係（継承）を白い三角形の矢印で表現する",
    "tags": [
      "UML",
      "クラス図",
      "汎化関係"
    ]
  },
  {
    "id": "ap2022autumn_am_13",
    "year": 2022,
    "season": "autumn",
    "section": "morning",
    "number": 13,
    "category": "基礎理論",
    "subcategory": "数値表現",
    "difficulty": 3,
    "question": "32ビット単精度浮動小数点数（IEEE 754）における符号ビット、指数部、仮数部のビット数の組み合わせはどれか。",
    "choices": [
      "1, 8, 23",
      "1, 11, 20",
      "2, 8, 22",
      "1, 10, 21"
    ],
    "answer": "A",
    "explanation": "IEEE 754の32ビット単精度は、符号ビット1ビット、指数部8ビット、仮数部23ビットで構成",
    "tags": [
      "浮動小数点",
      "IEEE 754",
      "数値表現"
    ]
  },
  {
    "id": "ap2022autumn_am_14",
    "year": 2022,
    "season": "autumn",
    "section": "morning",
    "number": 14,
    "category": "マネジメント",
    "subcategory": "CMMI",
    "difficulty": 3,
    "question": "CMMI（Capability Maturity Model Integration）の成熟度レベル2の特徴はどれか。",
    "choices": [
      "プロセスが定義されている",
      "組織的に管理されている",
      "プロセスが定量的に管理されている",
      "継続的な改善が行われている"
    ],
    "answer": "B",
    "explanation": "CMMIレベル2（Managed）はプロジェクトレベルで管理されており、基本的なプロセスが確立されている状態",
    "tags": [
      "CMMI",
      "プロセス改善",
      "成熟度"
    ]
  },
  {
    "id": "ap2022autumn_am_15",
    "year": 2022,
    "season": "autumn",
    "section": "morning",
    "number": 15,
    "category": "技術要素",
    "subcategory": "HTTPS",
    "difficulty": 2,
    "question": "HTTPSの主な目的として適切なものはどれか。",
    "choices": [
      "通信速度の向上",
      "データの圧縮",
      "通信の暗号化と認証",
      "サーバー負荷の軽減"
    ],
    "answer": "C",
    "explanation": "HTTPS（HTTP Secure）はTLS/SSLを使用してHTTP通信を暗号化し、サーバー認証を提供する",
    "tags": [
      "HTTPS",
      "TLS/SSL",
      "暗号化"
    ]
  },
  {
    "id": "ap2022spring_pm_02",
    "year": 2022,
    "season": "spring",
    "section": "afternoon",
    "number": 2,
    "category": "システム設計",
    "subcategory": "データベース設計",
    "difficulty": 4,
    "question": "電子コマースサイトの商品管理システムで、商品テーブル、カテゴリテーブル、在庫テーブルがある。第3正規形に正規化するための最も適切なアプローチはどれか。",
    "choices": [
      "全てのテーブルを結合して1つのテーブルにする",
      "推移的関数従属を除去し、テーブルを分割する",
      "インデックスを追加して検索速度を向上させる",
      "外部キー制約を強化する"
    ],
    "answer": "B",
    "explanation": "第3正規形では推移的関数従属を除去する必要がある。A→B→Cの関係がある場合、Cを別テーブルに分割する",
    "tags": [
      "データベース設計",
      "第3正規形",
      "正規化"
    ]
  },
  {
    "id": "ap2022spring_pm_03",
    "year": 2022,
    "season": "spring",
    "section": "afternoon",
    "number": 3,
    "category": "ネットワーク設計",
    "subcategory": "VLAN",
    "difficulty": 4,
    "question": "企業ネットワークでVLANを導入する主な目的として最も適切なものはどれか。",
    "choices": [
      "通信速度の向上",
      "コリジョンドメインの分割とセキュリティ向上",
      "配線コストの削減",
      "サーバーの負荷分散"
    ],
    "answer": "B",
    "explanation": "VLANは物理的な接続に関係なく論理的なネットワークを構成でき、コリジョンドメインの分割とセキュリティ向上に寄与する",
    "tags": [
      "VLAN",
      "コリジョンドメイン",
      "ネットワークセキュリティ"
    ]
  },
  {
    "id": "ap2022autumn_pm_02",
    "year": 2022,
    "season": "autumn",
    "section": "afternoon",
    "number": 2,
    "category": "プログラミング",
    "subcategory": "デザインパターン",
    "difficulty": 4,
    "question": "Observerパターンの実装において、Subject（被観察者）が状態変化をObserver（観察者）に通知するための一般的なメソッド名はどれか。",
    "choices": [
      "notify()",
      "update()",
      "observe()",
      "subscribe()"
    ],
    "answer": "A",
    "explanation": "ObserverパターンではSubjectがnotify()メソッドで全てのObserverに通知し、Observerはupdate()メソッドで状態更新を受け取る",
    "tags": [
      "Observerパターン",
      "デザインパターン",
      "オブジェクト指向"
    ]
  },
  {
    "id": "ap2022autumn_pm_03",
    "year": 2022,
    "season": "autumn",
    "section": "afternoon",
    "number": 3,
    "category": "システム開発技術",
    "subcategory": "パフォーマンスチューニング",
    "difficulty": 4,
    "question": "Webアプリケーションでデータベースクエリのパフォーマンスを改善するための手法として最も効果的なものはどれか。",
    "choices": [
      "サーバーのメモリ増設",
      "インデックスの最適化とN+1クエリ問題の解決",
      "CPUのクロック数向上",
      "ネットワーク帯域の幅拡張"
    ],
    "answer": "B",
    "explanation": "データベースパフォーマンス改善には、適切なインデックス設計とN+1クエリ（繰り返しクエリ）の解決が最も効果的",
    "tags": [
      "パフォーマンスチューニング",
      "N+1クエリ",
      "インデックス"
    ]
  },
  {
    "id": "ap2022spring_pm_04",
    "year": 2022,
    "season": "spring",
    "section": "afternoon",
    "number": 4,
    "category": "システム管理",
    "subcategory": "バックアップ戦略",
    "difficulty": 3,
    "question": "クラウドシステムのバックアップ戦略で、3-2-1ルールの意味はどれか。",
    "choices": [
      "3コピー、2種類のメディア、1コピーはオフサイト",
      "3回のフルバックアップ、2回の差分バックアップ、1回のログバックアップ",
      "3日保存、2週間保存、1ヶ月保存",
      "3つのデータセンター、2つのクラウドベンダー、1つのオンプレミス"
    ],
    "answer": "A",
    "explanation": "3-2-1ルールはバックアップの基本原則で3コピー作成、2種類の異なるメディアに保存、1コピーはオフサイト（遠隔地）に保管",
    "tags": [
      "バックアップ",
      "3-2-1ルール",
      "災害対策"
    ]
  },
  {
    "id": "ap2022spring_pm_05",
    "year": 2022,
    "season": "spring",
    "section": "afternoon",
    "number": 5,
    "category": "データベース",
    "subcategory": "インデックス設計",
    "difficulty": 3,
    "question": "売上テーブルに対して「日付範囲＋商品カテゴリ」での検索が頻繁に行われる。最も効果的なインデックス設計はどれか。",
    "choices": [
      "日付列のみに単一インデックス",
      "商品カテゴリ列のみに単一インデックス",
      "日付、商品カテゴリの順序での複合インデックス",
      "商品カテゴリ、日付の順序での複合インデックス"
    ],
    "answer": "C",
    "explanation": "範囲検索を含むクエリでは、範囲検索条件（日付）を複合インデックスの先頭に配置することで、効率的な検索が可能になる",
    "tags": [
      "インデックス",
      "複合インデックス",
      "クエリ最適化"
    ]
  },
  {
    "id": "ap2022spring_pm_06",
    "year": 2022,
    "season": "spring",
    "section": "afternoon",
    "number": 6,
    "category": "システム設計",
    "subcategory": "マイクロサービス",
    "difficulty": 4,
    "question": "マイクロサービスアーキテクチャでサービス間通信において、結合度を下げつつ信頼性を確保する設計パターンはどれか。",
    "choices": [
      "同期的なRESTAPI呼び出しのみを使用",
      "共有データベースでデータを管理",
      "イベント駆動アーキテクチャとCircuit Breakerパターン",
      "すべてのサービスを同一プロセスで実行"
    ],
    "answer": "C",
    "explanation": "イベント駆動アーキテクチャは疎結合を実現し、Circuit Breakerパターンはサービス障害時の信頼性を確保する",
    "tags": [
      "マイクロサービス",
      "イベント駆動",
      "Circuit Breaker"
    ]
  },
  {
    "id": "ap2022spring_pm_07",
    "year": 2022,
    "season": "spring",
    "section": "afternoon",
    "number": 7,
    "category": "セキュリティ",
    "subcategory": "OAuth 2.0",
    "difficulty": 3,
    "question": "OAuth 2.0のAuthorization Code Flowで、認可サーバーからアクセストークンを取得する際に必要な情報の組み合わせはどれか。",
    "choices": [
      "認可コード、クライアントID、リダイレクトURI",
      "認可コード、クライアントID、クライアントシークレット、リダイレクトURI",
      "クライアントID、ユーザー名、パスワード",
      "認可コード、スコープ、ユーザーID"
    ],
    "answer": "B",
    "explanation": "Authorization Code Flowでは、認可コード、クライアントID、クライアントシークレット、リダイレクトURIの4つが必要",
    "tags": [
      "OAuth 2.0",
      "認証",
      "Authorization Code Flow"
    ]
  },
  {
    "id": "ap2022spring_pm_08",
    "year": 2022,
    "season": "spring",
    "section": "afternoon",
    "number": 8,
    "category": "アルゴリズム",
    "subcategory": "動的プログラミング",
    "difficulty": 4,
    "question": "重複する部分問題を持つ問題の解法として動的プログラミングが適用される。フィボナッチ数列計算での従来の再帰とメモ化の時間計算量はそれぞれどれか。",
    "choices": [
      "O(2^n), O(n)",
      "O(n), O(2^n)",
      "O(n^2), O(n)",
      "O(n), O(n^2)"
    ],
    "answer": "A",
    "explanation": "従来の再帰は指数時間O(2^n)だが、メモ化により各部分問題を1回だけ計算するため線形時間O(n)に改善される",
    "tags": [
      "動的プログラミング",
      "メモ化",
      "時間計算量"
    ]
  },
  {
    "id": "ap2022spring_pm_09",
    "year": 2022,
    "season": "spring",
    "section": "afternoon",
    "number": 9,
    "category": "プロジェクトマネジメント",
    "subcategory": "リスク管理",
    "difficulty": 3,
    "question": "ITプロジェクトのリスク分析において、発生確率と影響度のマトリックスで「高確率・高影響」と評価されたリスクの対応戦略として最適なものはどれか。",
    "choices": [
      "受容（Accept）",
      "回避（Avoid）",
      "軽減（Mitigate）",
      "転嫁（Transfer）"
    ],
    "answer": "B",
    "explanation": "高確率・高影響のリスクは最も危険度が高いため、プロジェクトの設計や計画を変更してリスクを完全に回避することが最適",
    "tags": [
      "リスク管理",
      "リスク対応戦略",
      "プロジェクトマネジメント"
    ]
  },
  {
    "id": "ap2022spring_pm_10",
    "year": 2022,
    "season": "spring",
    "section": "afternoon",
    "number": 10,
    "category": "システム運用",
    "subcategory": "性能監視",
    "difficulty": 3,
    "question": "Webアプリケーションの性能監視において、エンドユーザー体験を最も直接的に測定する指標はどれか。",
    "choices": [
      "CPU使用率",
      "メモリ使用量",
      "レスポンス時間",
      "スループット"
    ],
    "answer": "C",
    "explanation": "レスポンス時間はユーザーがリクエストを送信してから応答を受け取るまでの時間で、エンドユーザー体験を最も直接的に表す",
    "tags": [
      "性能監視",
      "レスポンス時間",
      "エンドユーザー体験"
    ]
  },
  {
    "id": "ap2022autumn_pm_04",
    "year": 2022,
    "season": "autumn",
    "section": "afternoon",
    "number": 4,
    "category": "ネットワーク",
    "subcategory": "TCP/IP",
    "difficulty": 3,
    "question": "TCPの輻輳制御メカニズムにおいて、パケット損失を検出した際のウィンドウサイズの制御方法として正しいものはどれか。",
    "choices": [
      "ウィンドウサイズを1に設定し、線形増加させる",
      "ウィンドウサイズを半分に減らし、線形増加させる",
      "ウィンドウサイズを維持し、タイムアウト値のみ調整",
      "ウィンドウサイズを0に設定し、指数的増加させる"
    ],
    "answer": "B",
    "explanation": "TCP Renoアルゴリズムでは、パケット損失検出時にウィンドウサイズを半分に減らし（乗法減少）、その後線形増加させる",
    "tags": [
      "TCP",
      "輻輳制御",
      "ウィンドウサイズ"
    ]
  },
  {
    "id": "ap2022autumn_pm_05",
    "year": 2022,
    "season": "autumn",
    "section": "afternoon",
    "number": 5,
    "category": "データベース",
    "subcategory": "ACID特性",
    "difficulty": 3,
    "question": "データベースのACID特性のうち、「一連の処理がすべて成功するか、すべて失敗するか」を保証する特性はどれか。",
    "choices": [
      "Atomicity（原子性）",
      "Consistency（一貫性）",
      "Isolation（独立性）",
      "Durability（持続性）"
    ],
    "answer": "A",
    "explanation": "Atomicity（原子性）は、トランザクション内のすべての操作が完全に実行されるか、まったく実行されないかを保証する特性",
    "tags": [
      "ACID",
      "原子性",
      "トランザクション"
    ]
  },
  {
    "id": "ap2022autumn_pm_06",
    "year": 2022,
    "season": "autumn",
    "section": "afternoon",
    "number": 6,
    "category": "システム設計",
    "subcategory": "キャッシュ戦略",
    "difficulty": 4,
    "question": "分散システムでのキャッシュ戦略において、データの更新時にキャッシュを無効化するWrite-Through方式の特徴はどれか。",
    "choices": [
      "書き込み性能は高いが、データ整合性に問題がある",
      "書き込み時にキャッシュも同時更新され、データ整合性が保たれるが書き込み性能が低下",
      "読み込み時にのみキャッシュを更新する",
      "キャッシュの容量が不足時のみデータを書き込む"
    ],
    "answer": "B",
    "explanation": "Write-Throughはデータ書き込み時にキャッシュも同時に更新するため、データ整合性は保たれるが、書き込み性能は低下する",
    "tags": [
      "キャッシュ",
      "Write-Through",
      "データ整合性"
    ]
  },
  {
    "id": "ap2022autumn_pm_07",
    "year": 2022,
    "season": "autumn",
    "section": "afternoon",
    "number": 7,
    "category": "プログラミング",
    "subcategory": "デザインパターン",
    "difficulty": 4,
    "question": "Singletonパターンをマルチスレッド環境で安全に実装する方法として最も適切なものはどれか。",
    "choices": [
      "Lazy Initialization（遅延初期化）のみ使用",
      "Double-Checked Locking パターン",
      "クラス変数での静的初期化",
      "メソッド全体をsynchronized修飾"
    ],
    "answer": "C",
    "explanation": "クラス変数での静的初期化は、JVMが保証するクラスローディングの原子性により、最もシンプルかつ安全なSingleton実装方法",
    "tags": [
      "Singleton",
      "デザインパターン",
      "マルチスレッド"
    ]
  },
  {
    "id": "ap2022autumn_pm_08",
    "year": 2022,
    "season": "autumn",
    "section": "afternoon",
    "number": 8,
    "category": "システム運用",
    "subcategory": "ログ管理",
    "difficulty": 3,
    "question": "大規模システムでのログ管理において、ログの可用性と検索性を両立するアーキテクチャとして最適なものはどれか。",
    "choices": [
      "単一サーバーでのファイルベースログ管理",
      "データベースでの集中ログ管理",
      "分散ログ収集システム（ELKスタック等）",
      "メモリ上でのログ管理"
    ],
    "answer": "C",
    "explanation": "ELKスタック（Elasticsearch, Logstash, Kibana）等の分散ログ収集システムは、スケーラビリティと高度な検索機能を提供",
    "tags": [
      "ログ管理",
      "ELKスタック",
      "分散システム"
    ]
  }
]