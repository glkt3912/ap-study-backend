[
  {
    "id": "ap2020spring_am_01",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 1,
    "category": "基礎理論",
    "subcategory": "2進数",
    "difficulty": 2,
    "question": "2進数で表現された数1011を10進数に変換したものはどれか。",
    "choices": [
      "9",
      "10", 
      "11",
      "12"
    ],
    "answer": "C",
    "explanation": "2進数1011は、1×2³ + 0×2² + 1×2¹ + 1×2⁰ = 8 + 0 + 2 + 1 = 11となる。"
  },
  {
    "id": "ap2020spring_am_02",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 2,
    "category": "基礎理論",
    "subcategory": "論理演算",
    "difficulty": 2,
    "question": "論理式 A∧(B∨C) と等価なものはどれか。",
    "choices": [
      "(A∧B)∨(A∧C)",
      "(A∨B)∧(A∨C)",
      "A∧B∧C",
      "A∨B∨C"
    ],
    "answer": "A",
    "explanation": "分配法則により、A∧(B∨C) = (A∧B)∨(A∧C)が成り立つ。"
  },
  {
    "id": "ap2020spring_am_03",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 3,
    "category": "基礎理論",
    "subcategory": "確率",
    "difficulty": 3,
    "question": "1個のサイコロを3回振ったとき、3回とも同じ目が出る確率はどれか。",
    "choices": [
      "1/36",
      "1/18",
      "1/6",
      "1/3"
    ],
    "answer": "A",
    "explanation": "1回目は任意の目（確率1）、2回目と3回目は1回目と同じ目（各確率1/6）。よって 1 × 1/6 × 1/6 = 1/36。"
  },
  {
    "id": "ap2020spring_am_04",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 4,
    "category": "基礎理論",
    "subcategory": "数値計算",
    "difficulty": 2,
    "question": "10進数の0.25を2進数で表現したものはどれか。",
    "choices": [
      "0.01",
      "0.10",
      "0.11",
      "1.0"
    ],
    "answer": "A",
    "explanation": "0.25 = 1/4 = 1×2⁻² であり、2進数では0.01と表現される。"
  },
  {
    "id": "ap2020spring_am_05",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 5,
    "category": "基礎理論",
    "subcategory": "アルゴリズム",
    "difficulty": 3,
    "question": "配列の要素数がnのとき、バブルソートの最悪の場合の計算量はどれか。",
    "choices": [
      "O(n)",
      "O(n log n)",
      "O(n²)",
      "O(n³)"
    ],
    "answer": "C",
    "explanation": "バブルソートは隣接する要素を比較して交換を行う。最悪の場合、n-1回のパスでそれぞれ最大n-1回の比較を行うため、計算量はO(n²)となる。"
  },
  {
    "id": "ap2020spring_am_06",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 6,
    "category": "コンピュータシステム",
    "subcategory": "プロセッサ",
    "difficulty": 2,
    "question": "CPUのパイプライン処理に関する説明として適切なものはどれか。",
    "choices": [
      "複数のプロセッサを並列に動作させる技術",
      "命令の実行を複数の段階に分けて並列に処理する技術",
      "メモリアクセスを高速化する技術",
      "割り込み処理を効率化する技術"
    ],
    "answer": "B",
    "explanation": "パイプライン処理は、命令の実行を「命令取得」「解読」「実行」「書き戻し」などの段階に分け、複数の命令を並列に処理する技術である。"
  },
  {
    "id": "ap2020spring_am_07",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 7,
    "category": "コンピュータシステム",
    "subcategory": "メモリ",
    "difficulty": 2,
    "question": "仮想記憶方式の説明として適切なものはどれか。",
    "choices": [
      "主記憶の容量を物理的に拡張する方式",
      "主記憶と補助記憶を組み合わせて、大容量の記憶空間を実現する方式",
      "複数の記憶装置を並列に配置する方式",
      "記憶装置の故障に備えてデータを複製する方式"
    ],
    "answer": "B",
    "explanation": "仮想記憶方式は、主記憶と補助記憶（通常はハードディスク）を組み合わせて、物理的な主記憶容量を超える大きな記憶空間をプログラムに提供する方式である。"
  },
  {
    "id": "ap2020spring_am_08",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 8,
    "category": "技術要素",
    "subcategory": "データベース",
    "difficulty": 3,
    "question": "関係データベースにおける正規化の目的として適切なものはどれか。",
    "choices": [
      "データの処理速度を向上させる",
      "データの冗長性を排除し、更新異常を防ぐ",
      "データの暗号化を行う",
      "データの圧縮率を向上させる"
    ],
    "answer": "B",
    "explanation": "正規化は、データベース設計において重複したデータ（冗長性）を排除し、データ更新時の不整合（更新異常）を防ぐことを目的とする。"
  },
  {
    "id": "ap2020spring_am_09",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 9,
    "category": "技術要素",
    "subcategory": "ネットワーク",
    "difficulty": 2,
    "question": "OSI参照モデルの第3層（ネットワーク層）の主な機能はどれか。",
    "choices": [
      "データの暗号化と復号化",
      "パケットのルーティング（経路制御）",
      "エラーの検出と訂正",
      "データの圧縮と展開"
    ],
    "answer": "B",
    "explanation": "OSI参照モデルの第3層（ネットワーク層）は、パケットの最適な経路を選択するルーティング機能を担当する。代表的なプロトコルにIPがある。"
  },
  {
    "id": "ap2020spring_am_10",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 10,
    "category": "技術要素",
    "subcategory": "セキュリティ",
    "difficulty": 3,
    "question": "公開鍵暗号方式に関する説明として適切なものはどれか。",
    "choices": [
      "暗号化と復号化に同一の鍵を使用する",
      "暗号化に公開鍵、復号化に秘密鍵を使用する",
      "鍵の配送が不要である",
      "共通鍵暗号方式よりも処理速度が速い"
    ],
    "answer": "B",
    "explanation": "公開鍵暗号方式では、暗号化には公開された公開鍵を使用し、復号化には秘密にしておく秘密鍵を使用する。これにより安全な通信が可能となる。"
  },
  {
    "id": "ap2020spring_am_11",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 11,
    "category": "技術要素",
    "subcategory": "プログラミング",
    "difficulty": 3,
    "question": "オブジェクト指向プログラミングにおける「継承」の説明として適切なものはどれか。",
    "choices": [
      "複数のオブジェクトが同じメソッド名で異なる処理を実行すること",
      "既存のクラスの特性を引き継いで新しいクラスを作成すること",
      "オブジェクトの内部データを外部から隠すこと",
      "複数のインターフェースを一つのクラスで実装すること"
    ],
    "answer": "B",
    "explanation": "継承は、既存のクラス（親クラス・スーパークラス）の属性やメソッドを引き継いで、新しいクラス（子クラス・サブクラス）を作成する機能である。"
  },
  {
    "id": "ap2020spring_am_12",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 12,
    "category": "マネジメント",
    "subcategory": "プロジェクト管理",
    "difficulty": 2,
    "question": "プロジェクト管理において、クリティカルパスとは何か。",
    "choices": [
      "最も費用のかかる作業の経路",
      "最も重要な作業の経路",
      "最も時間のかかる作業の経路",
      "最も資源を消費する作業の経路"
    ],
    "answer": "C",
    "explanation": "クリティカルパスは、プロジェクト全体の所要時間を決定する最長の作業経路である。この経路上の作業が遅れると、プロジェクト全体の完了が遅れる。"
  },
  {
    "id": "ap2020spring_am_13",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 13,
    "category": "マネジメント",
    "subcategory": "システム開発",
    "difficulty": 2,
    "question": "ウォータフォール型開発の特徴として適切なものはどれか。",
    "choices": [
      "各工程を繰り返し実行する",
      "要件定義から順次工程を進める",
      "プロトタイプを作成しながら開発する",
      "短期間で機能を実装し、段階的にリリースする"
    ],
    "answer": "B",
    "explanation": "ウォータフォール型開発は、要件定義、設計、実装、テスト、運用・保守の各工程を順次実行していく開発手法である。"
  },
  {
    "id": "ap2020spring_am_14",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 14,
    "category": "経営戦略・企業と法務",
    "subcategory": "経営戦略",
    "difficulty": 2,
    "question": "SWOT分析における「T」が表すものはどれか。",
    "choices": [
      "強み（Strengths）",
      "弱み（Weaknesses）",
      "機会（Opportunities）",
      "脅威（Threats）"
    ],
    "answer": "D",
    "explanation": "SWOT分析は、Strengths（強み）、Weaknesses（弱み）、Opportunities（機会）、Threats（脅威）の4つの観点から分析を行う手法である。"
  },
  {
    "id": "ap2020spring_am_15",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 15,
    "category": "経営戦略・企業と法務",
    "subcategory": "法務",
    "difficulty": 2,
    "question": "著作権法における「引用」の要件として不適切なものはどれか。",
    "choices": [
      "引用の目的が正当であること",
      "引用部分が明確に区別されていること",
      "著作者の許諾を得ること",
      "引用部分が主従関係において従であること"
    ],
    "answer": "C",
    "explanation": "著作権法上の「引用」は、要件を満たせば著作者の許諾なしに行うことができる。著作者の許諾が必要という選択肢は不適切である。"
  },
  {
    "id": "ap2020spring_pm_01",
    "year": 2020,
    "season": "spring", 
    "section": "afternoon",
    "number": 1,
    "category": "システム設計",
    "subcategory": "データベース設計",
    "difficulty": 4,
    "question": "オンラインショッピングサイトにおいて、顧客、商品、注文の関係を表すER図を作成する場合、適切な関係として正しいものはどれか。",
    "choices": [
      "顧客と商品は1:1、商品と注文は1:多",
      "顧客と注文は1:多、商品と注文は多:多",
      "顧客と商品は多:多、商品と注文は1:1", 
      "顧客と注文は1:1、商品と注文は1:多"
    ],
    "answer": "B",
    "explanation": "一人の顧客は複数の注文ができる（1:多）。一つの注文には複数の商品が含まれ、一つの商品は複数の注文で購入される（多:多）。この多:多関係は通常、注文詳細テーブルを介して解決される。"
  },
  {
    "id": "ap2020spring_pm_02",
    "year": 2020,
    "season": "spring",
    "section": "afternoon", 
    "number": 2,
    "category": "プログラミング",
    "subcategory": "アルゴリズム",
    "difficulty": 4,
    "question": "次のソートアルゴリズムのうち、最悪の場合でもO(n log n)の計算量を保証するものはどれか。",
    "choices": [
      "バブルソート",
      "選択ソート",
      "クイックソート", 
      "マージソート"
    ],
    "answer": "D",
    "explanation": "マージソートは分割統治法を用いており、常にO(n log n)の計算量となる。クイックソートは平均的にはO(n log n)だが、最悪の場合はO(n²)となる。"
  },
  {
    "id": "ap2020autumn_am_01",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 1,
    "category": "基礎理論",
    "subcategory": "16進数",
    "difficulty": 2,
    "question": "16進数のABを10進数に変換したものはどれか。",
    "choices": [
      "171",
      "181", 
      "191",
      "201"
    ],
    "answer": "A",
    "explanation": "16進数のABは、A×16¹ + B×16⁰ = 10×16 + 11×1 = 160 + 11 = 171である。"
  },
  {
    "id": "ap2020autumn_am_02",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 2,
    "category": "基礎理論",
    "subcategory": "集合",
    "difficulty": 2,
    "question": "集合A = {1, 2, 3, 4}、集合B = {3, 4, 5, 6}のとき、A∩Bはどれか。",
    "choices": [
      "{1, 2}",
      "{3, 4}",
      "{5, 6}",
      "{1, 2, 3, 4, 5, 6}"
    ],
    "answer": "B", 
    "explanation": "A∩Bは集合AとBの共通部分（積集合）を表し、両方の集合に含まれる要素{3, 4}となる。"
  },
  {
    "id": "ap2020autumn_am_03",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 3,
    "category": "コンピュータシステム",
    "subcategory": "論理回路",
    "difficulty": 3,
    "question": "2入力AND回路と2入力OR回路を組み合わせて実現できる論理演算はどれか。",
    "choices": [
      "NAND演算のみ",
      "NOR演算のみ", 
      "XOR演算のみ",
      "すべての論理演算"
    ],
    "answer": "D",
    "explanation": "AND回路とOR回路、さらにNOT回路があれば、ド・モルガンの法則などを用いてすべての論理演算を実現できる。これを関数完全性という。"
  },
  {
    "id": "ap2020spring_am_16",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 16,
    "category": "基礎理論",
    "subcategory": "データ構造",
    "difficulty": 2,
    "question": "スタック（LIFO）に要素A, B, C, Dの順でpushした後、2回popを実行した場合、スタックの状態はどうなるか。",
    "choices": [
      "A, Bが残る（Bが先頭）",
      "A, Bが残る（Aが先頭）", 
      "C, Dが残る（Dが先頭）",
      "C, Dが残る（Cが先頭）"
    ],
    "answer": "B",
    "explanation": "スタックはLIFO（Last In, First Out）なので、D, C, B, Aの順でpushされ、2回popするとDとCが取り出され、A, Bが残る（Aが先頭）。"
  },
  {
    "id": "ap2020spring_am_17",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 17,
    "category": "基礎理論",
    "subcategory": "グラフ理論",
    "difficulty": 3,
    "question": "頂点数6、辺数8の単純グラフにおいて、各頂点の次数の総和はいくらか。",
    "choices": [
      "8",
      "12",
      "16",
      "24"
    ],
    "answer": "C",
    "explanation": "グラフ理論の握手定理により、すべての頂点の次数の総和は辺数の2倍となる。辺数が8なので、次数の総和は8×2=16となる。"
  },
  {
    "id": "ap2020spring_am_18",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 18,
    "category": "基礎理論",
    "subcategory": "統計",
    "difficulty": 2,
    "question": "データ集合{2, 4, 6, 8, 10}の分散はいくらか。",
    "choices": [
      "6",
      "8",
      "10",
      "12"
    ],
    "answer": "B",
    "explanation": "平均は(2+4+6+8+10)÷5=6。分散は各データと平均の差の2乗の平均：{(2-6)²+(4-6)²+(6-6)²+(8-6)²+(10-6)²}÷5=(16+4+0+4+16)÷5=8。"
  },
  {
    "id": "ap2020spring_am_19",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 19,
    "category": "基礎理論",
    "subcategory": "離散数学",
    "difficulty": 3,
    "question": "順列P(5,3)の値はいくらか。",
    "choices": [
      "15",
      "60",
      "125",
      "243"
    ],
    "answer": "B",
    "explanation": "P(5,3) = 5!/(5-3)! = 5!/2! = (5×4×3×2×1)/(2×1) = 120/2 = 60。5個から3個を選んで順序を考慮した並べ方の数。"
  },
  {
    "id": "ap2020spring_am_20",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 20,
    "category": "基礎理論",
    "subcategory": "組み合わせ",
    "difficulty": 2,
    "question": "組み合わせC(6,2)の値はいくらか。",
    "choices": [
      "12",
      "15",
      "18",
      "30"
    ],
    "answer": "B",
    "explanation": "C(6,2) = 6!/(2!×(6-2)!) = 6!/(2!×4!) = (6×5)/(2×1) = 15。6個から2個を選ぶ組み合わせの数。"
  },
  {
    "id": "ap2020spring_am_21",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 21,
    "category": "基礎理論",
    "subcategory": "木構造",
    "difficulty": 3,
    "question": "完全二分木で、葉ノードが8個ある場合、内部ノード（葉ではないノード）の個数はいくつか。",
    "choices": [
      "6",
      "7",
      "8",
      "15"
    ],
    "answer": "B",
    "explanation": "完全二分木では、内部ノード数 = 葉ノード数 - 1 が成り立つ。葉ノードが8個なので、内部ノードは8-1=7個となる。"
  },
  {
    "id": "ap2020spring_am_22",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 22,
    "category": "基礎理論",
    "subcategory": "論理回路",
    "difficulty": 2,
    "question": "真理値表でA=1, B=0のとき、A XOR Bの結果はどれか。",
    "choices": [
      "0",
      "1",
      "A",
      "B"
    ],
    "answer": "B",
    "explanation": "XOR（排他的論理和）は、入力が異なる場合に1を出力する。A=1, B=0なので異なるため、結果は1となる。"
  },
  {
    "id": "ap2020spring_am_23",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 23,
    "category": "基礎理論",
    "subcategory": "数列",
    "difficulty": 3,
    "question": "等比数列 2, 6, 18, 54, ... の第5項はいくらか。",
    "choices": [
      "162",
      "186",
      "194",
      "216"
    ],
    "answer": "A",
    "explanation": "初項a=2、公比r=3の等比数列。第n項の公式は a×r^(n-1)。第5項は2×3^(5-1) = 2×3^4 = 2×81 = 162。"
  },
  {
    "id": "ap2020spring_am_24",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 24,
    "category": "コンピュータシステム",
    "subcategory": "CPU",
    "difficulty": 2,
    "question": "CPUのクロック周波数が2GHzの場合、1クロックサイクルの時間は何秒か。",
    "choices": [
      "0.5×10^-9秒",
      "1.0×10^-9秒",
      "2.0×10^-9秒",
      "5.0×10^-9秒"
    ],
    "answer": "A",
    "explanation": "クロック周波数2GHz = 2×10^9Hz。1クロックサイクルの時間 = 1/(2×10^9) = 0.5×10^-9秒 = 0.5ナノ秒。"
  },
  {
    "id": "ap2020spring_am_25",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 25,
    "category": "コンピュータシステム",
    "subcategory": "キャッシュメモリ",
    "difficulty": 3,
    "question": "キャッシュメモリのライトバック方式の特徴として正しいものはどれか。",
    "choices": [
      "書き込み時に即座にメインメモリを更新する",
      "書き込み時にキャッシュのみを更新し、後でメインメモリを更新する",
      "読み出し時のみキャッシュを使用する",
      "メインメモリを使用せずキャッシュのみで動作する"
    ],
    "answer": "B",
    "explanation": "ライトバック方式は、CPUがデータを書き込む際、まずキャッシュのみを更新し、後でキャッシュからメインメモリに書き戻す方式。書き込み処理が高速化される。"
  },
  {
    "id": "ap2020spring_am_26",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 26,
    "category": "コンピュータシステム",
    "subcategory": "I/O制御",
    "difficulty": 2,
    "question": "DMA（Direct Memory Access）制御の目的として適切なものはどれか。",
    "choices": [
      "CPUの処理速度を向上させる",
      "メモリ容量を拡張する",
      "I/O処理でのCPU負荷を軽減する",
      "データの暗号化を行う"
    ],
    "answer": "C",
    "explanation": "DMA制御は、CPUを介さずに周辺装置とメモリ間で直接データ転送を行う機能。これによりI/O処理時のCPU負荷が軽減される。"
  },
  {
    "id": "ap2020spring_am_27",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 27,
    "category": "コンピュータシステム",
    "subcategory": "割り込み制御",
    "difficulty": 3,
    "question": "割り込み処理において、割り込み優先度が最も高いものはどれか。",
    "choices": [
      "外部割り込み",
      "タイマー割り込み",
      "機械チェック割り込み",
      "プログラム割り込み"
    ],
    "answer": "C",
    "explanation": "機械チェック割り込みは、ハードウェアの故障やエラーを検出した際に発生する割り込みで、システムの安全性のため最高優先度を持つ。"
  },
  {
    "id": "ap2020spring_am_28",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 28,
    "category": "コンピュータシステム",
    "subcategory": "記憶装置",
    "difficulty": 2,
    "question": "SSD（Solid State Drive）の特徴として適切なものはどれか。",
    "choices": [
      "機械的な可動部品がある",
      "HDDより消費電力が大きい",
      "ランダムアクセス性能が高い",
      "容量あたりの価格がHDDより安い"
    ],
    "answer": "C",
    "explanation": "SSDはフラッシュメモリを使用し、機械的な可動部品がないため、ランダムアクセス性能が高く、低消費電力、高速アクセスが可能。"
  },
  {
    "id": "ap2020spring_am_29",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 29,
    "category": "コンピュータシステム",
    "subcategory": "RAID",
    "difficulty": 3,
    "question": "RAID 1の特徴として正しいものはどれか。",
    "choices": [
      "データをブロック単位でストライピングする",
      "パリティ情報を分散配置する",
      "2台のディスクに同一データを書き込む",
      "最低3台のディスクが必要である"
    ],
    "answer": "C",
    "explanation": "RAID 1（ミラーリング）は、2台のディスクに同一のデータを書き込むことで冗長性を確保し、一方のディスクが故障しても継続稼働できる。"
  },
  {
    "id": "ap2020spring_am_30",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 30,
    "category": "コンピュータシステム",
    "subcategory": "オペレーティングシステム",
    "difficulty": 2,
    "question": "プロセススケジューリングのラウンドロビン方式の特徴として適切なものはどれか。",
    "choices": [
      "実行時間が短いプロセスを優先する",
      "優先度の高いプロセスを優先する",
      "各プロセスに一定時間を割り当てて順番に実行する",
      "I/O待機の多いプロセスを優先する"
    ],
    "answer": "C",
    "explanation": "ラウンドロビン方式は、各プロセスに一定の時間（タイムスライス）を割り当て、その時間が経過すると次のプロセスに切り替える公平なスケジューリング方式。"
  },
  {
    "id": "ap2020spring_am_31",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 31,
    "category": "技術要素",
    "subcategory": "SQL",
    "difficulty": 3,
    "question": "SQLのJOIN句において、INNER JOINとLEFT OUTER JOINの違いとして正しいものはどれか。",
    "choices": [
      "INNER JOINは左のテーブルのすべての行を返す",
      "LEFT OUTER JOINは両テーブルに存在する行のみ返す",
      "INNER JOINは両テーブルに存在する行のみ返す",
      "両者に違いはない"
    ],
    "answer": "C",
    "explanation": "INNER JOINは両方のテーブルに存在する行のみを返す。LEFT OUTER JOINは左のテーブルのすべての行と、右のテーブルの一致する行を返す。"
  },
  {
    "id": "ap2020spring_am_32",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 32,
    "category": "技術要素",
    "subcategory": "TCP/IP",
    "difficulty": 2,
    "question": "IPv4アドレス192.168.1.0/24のネットワークで使用できるホスト数は最大いくつか。",
    "choices": [
      "254",
      "255",
      "256",
      "510"
    ],
    "answer": "A",
    "explanation": "/24はサブネットマスク255.255.255.0を意味し、8ビットがホスト部、2^8=256個のアドレスがあるが、ネットワークアドレスとブロードキャストアドレスを除くため、使用可能なホスト数は254。"
  },
  {
    "id": "ap2020spring_am_33",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 33,
    "category": "技術要素",
    "subcategory": "デジタル証明書",
    "difficulty": 3,
    "question": "デジタル証明書の検証において、証明書が失効されているかを確認するための仕組みはどれか。",
    "choices": [
      "CRL（Certificate Revocation List）",
      "PKI（Public Key Infrastructure）",
      "SSL/TLS",
      "HTTPS"
    ],
    "answer": "A",
    "explanation": "CRL（Certificate Revocation List）は、認証局（CA）が管理する失効した証明書の一覧で、証明書の有効性を確認するために使用される。"
  },
  {
    "id": "ap2020spring_am_34",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 34,
    "category": "技術要素",
    "subcategory": "ファイアウォール",
    "difficulty": 2,
    "question": "パケットフィルタリング型ファイアウォールの特徴として適切なものはどれか。",
    "choices": [
      "アプリケーションレベルの内容を検査する",
      "IPアドレスやポート番号などを基にパケットをフィルタリングする",
      "プロキシサーバとして動作する",
      "NAT機能を提供する"
    ],
    "answer": "B",
    "explanation": "パケットフィルタリング型ファイアウォールは、パケットのヘッダ情報（IPアドレス、ポート番号、プロトコルなど）を基にパケットを通すかブロックするかを判定する。"
  },
  {
    "id": "ap2020spring_am_35",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 35,
    "category": "技術要素",
    "subcategory": "ウイルス対策",
    "difficulty": 2,
    "question": "コンピュータウイルスの種類で、他のファイルに寄生せず、単体で存在して自己爆執できるものはどれか。",
    "choices": [
      "ファイルウイルス",
      "マクロウイルス",
      "ワーム",
      "トロイの木馬"
    ],
    "answer": "C",
    "explanation": "ワームは、他のファイルに寄生することなく単体で存在し、ネットワークを通じて自己爆執できるウイルスの一種である。"
  },
  {
    "id": "ap2020spring_am_36",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 36,
    "category": "技術要素",
    "subcategory": "XML",
    "difficulty": 3,
    "question": "XMLスキーマのXSD（XML Schema Definition）の主な目的として適切なものはどれか。",
    "choices": [
      "XML文書のスタイルを定義する",
      "XML文書の構造とデータ型を定義する",
      "XML文書をHTMLに変換する",
      "XML文書を暗号化する"
    ],
    "answer": "B",
    "explanation": "XSD（XML Schema Definition）は、XML文書の構造、要素のデータ型、出現回数などを定義し、XML文書の妥当性を検証するためのスキーマ言語。"
  },
  {
    "id": "ap2020spring_am_37",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 37,
    "category": "技術要素",
    "subcategory": "JavaScript",
    "difficulty": 3,
    "question": "JavaScriptの非同期処理に関する説明として適切なものはどれか。",
    "choices": [
      "ブロッキング処理で、処理が完了するまで待機する",
      "ノンブロッキング処理で、処理結果をコールバックで受け取る",
      "マルチスレッドで並列処理を行う",
      "プロセス間通信でデータを交換する"
    ],
    "answer": "B",
    "explanation": "JavaScriptの非同期処理は、処理の完了を待たずに次の処理を継続し、結果はコールバック関数やPromise、async/awaitで受け取るノンブロッキング処理である。"
  },
  {
    "id": "ap2020spring_am_38",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 38,
    "category": "技術要素",
    "subcategory": "REST API",
    "difficulty": 3,
    "question": "REST APIの設計原則に関する説明として適切なものはどれか。",
    "choices": [
      "サーバーにセッション情報を保持する",
      "HTTPメソッドを使い分け、ステートレスな通信を行う",
      "バイナリデータで通信する",
      "独自プロトコルで通信する"
    ],
    "answer": "B",
    "explanation": "REST APIの設計原則の一つはステートレスな通信であり、HTTPメソッド（GET, POST, PUT, DELETEなど）を適切に使い分け、サーバーはクライアントの状態を保持しない。"
  },
  {
    "id": "ap2020spring_am_39",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 39,
    "category": "技術要素",
    "subcategory": "JSON",
    "difficulty": 2,
    "question": "JSON（JavaScript Object Notation）の特徴として適切なものはどれか。",
    "choices": [
      "XMLよりもデータサイズが大きい",
      "スキーマ定義が必須である",
      "軽量で人間にも読みやすいデータ交換フォーマット",
      "バイナリデータのみを扱う"
    ],
    "answer": "C",
    "explanation": "JSONは、JavaScript由来の軽量なテキストベースのデータ交換フォーマットで、人間にも読みやすく、多くのプログラミング言語でサポートされている。"
  },
  {
    "id": "ap2020spring_am_40",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 40,
    "category": "プログラミング",
    "subcategory": "オブジェクト指向",
    "difficulty": 3,
    "question": "オブジェクト指向プログラミングにおける「カプセル化」の説明として適切なものはどれか。",
    "choices": [
      "クラスを継承して新しいクラスを作成すること",
      "同じメソッド名で異なる処理を実行すること",
      "オブジェクトの内部データを外部から直接アクセスできないようにすること",
      "複数のクラスを組み合わせて新しいクラスを作ること"
    ],
    "answer": "C",
    "explanation": "カプセル化は、オブジェクトの内部データ（フィールド）や実装を外部から隠蔽し、公開されたメソッドを通じてのみアクセスを許可することで、データの保護とコードの保守性を高める。"
  },
  {
    "id": "ap2020spring_am_41",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 41,
    "category": "プログラミング",
    "subcategory": "デザインパターン",
    "difficulty": 4,
    "question": "GoFのデザインパターンのうち、Singletonパターンの目的として適切なものはどれか。",
    "choices": [
      "オブジェクトの生成を工場クラスに委譲する",
      "クラスのインスタンスを必ず1つだけ生成する",
      "オブジェクトの状態変化を他のオブジェクトに通知する",
      "アルゴリズムをカプセル化して交換可能にする"
    ],
    "answer": "B",
    "explanation": "Singletonパターンは、クラスのインスタンスをシステム全体で必ず1つだけ生成することを保証するパターン。グローバルな状態管理やリソース管理に使用される。"
  },
  {
    "id": "ap2020spring_am_42",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 42,
    "category": "システム設計",
    "subcategory": "UML",
    "difficulty": 3,
    "question": "UMLのクラス図で、クラス間の関連を表す線の種類として適切でないものはどれか。",
    "choices": [
      "関連（Association）",
      "汎化（Generalization）",
      "集約（Aggregation）",
      "シーケンス（Sequence）"
    ],
    "answer": "D",
    "explanation": "クラス図では関連、汎化（継承）、集約、合成などの関連線が使用される。シーケンスはシーケンス図で使用される概念であり、クラス図の関連線の種類ではない。"
  },
  {
    "id": "ap2020spring_am_43",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 43,
    "category": "マネジメント",
    "subcategory": "ITIL",
    "difficulty": 3,
    "question": "ITIL v4におけるサービスデスクの主な役割として適切なものはどれか。",
    "choices": [
      "システムの開発とテスト",
      "ユーザーからの問い合わせ窓口となり、インシデントの初期対応を行う",
      "ネットワークの物理的な設定と管理",
      "ソフトウェアのライセンス管理"
    ],
    "answer": "B",
    "explanation": "ITILにおけるサービスデスクは、ユーザーからのITサービスに関する問い合わせやインシデントの窓口となり、初期対応やエスカレーションを行う役割を持つ。"
  },
  {
    "id": "ap2020spring_am_44",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 44,
    "category": "マネジメント",
    "subcategory": "SLA",
    "difficulty": 2,
    "question": "SLA（Service Level Agreement）に記載される内容として適切なものはどれか。",
    "choices": [
      "システムの技術的設計書",
      "サービスの品質レベルとその測定方法",
      "プログラムのソースコード",
      "ネットワークの物理構成図"
    ],
    "answer": "B",
    "explanation": "SLA（Service Level Agreement）は、ITサービス提供者と利用者間で結ぶサービスレベルに関する合意書で、サービスの品質レベル（稼働率、応答時間など）とその測定方法を定める。"
  },
  {
    "id": "ap2020spring_am_45",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 45,
    "category": "経営戦略・企業と法務",
    "subcategory": "ROI",
    "difficulty": 2,
    "question": "ROI（Return On Investment）の計算式として適切なものはどれか。",
    "choices": [
      "ROI = 投資額 ÷ 利益額",
      "ROI = 利益額 ÷ 投資額",
      "ROI = 売上高 ÷ 投資額",
      "ROI = 投資額 × 利益率"
    ],
    "answer": "B",
    "explanation": "ROI（投資利益率）は、投資した金額に対してどれだけの利益が得られたかを示す指標であり、「ROI = 利益額 ÷ 投資額」で計算される。"
  },
  {
    "id": "ap2020autumn_am_04",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 4,
    "category": "基礎理論",
    "subcategory": "時間計算量",
    "difficulty": 3,
    "question": "クイックソートの平均時間計算量はO(n log n)であるが、最悪時間計算量はどれか。",
    "choices": [
      "O(n)",
      "O(n log n)",
      "O(n²)",
      "O(2^n)"
    ],
    "answer": "C",
    "explanation": "クイックソートの最悪ケースは、ピボットが最小または最大要素になる場合（既にソート済みの列など）で、この時のO(n²)の計算量となる。"
  },
  {
    "id": "ap2020autumn_am_05",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 5,
    "category": "基礎理論",
    "subcategory": "ハッシュテーブル",
    "difficulty": 3,
    "question": "ハッシュテーブルのハッシュ値の衝突（collision）を解決する手法として不適切なものはどれか。",
    "choices": [
      "チェイン法（連鎖法）",
      "オープンアドレシング法",
      "バイナリサーチ法",
      "線形探査法"
    ],
    "answer": "C",
    "explanation": "バイナリサーチ法はソート済みの配列での検索アルゴリズムであり、ハッシュテーブルの衝突解決手法ではない。チェイン法、オープンアドレシング法、線形探査法はいずれも衝突解決手法である。"
  },
  {
    "id": "ap2020autumn_am_06",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 6,
    "category": "基礎理論",
    "subcategory": "正規表現",
    "difficulty": 3,
    "question": "正規表現で「[0-9]+\\.[0-9]+」とマッチする文字列はどれか。",
    "choices": [
      "123",
      "12.34",
      "abc.def",
      "12.34.56"
    ],
    "answer": "B",
    "explanation": "この正規表現は「1つ以上の数字 + ピリオド + 1つ以上の数字」のパターンを表す。「12.34」がこのパターンに完全に一致する。"
  },
  {
    "id": "ap2020autumn_am_07",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 7,
    "category": "コンピュータシステム",
    "subcategory": "GPU",
    "difficulty": 2,
    "question": "GPU（Graphics Processing Unit）を一般的な計算に利用する技術を何と呼ぶか。",
    "choices": [
      "SIMD",
      "GPGPU",
      "CUDA",
      "OpenGL"
    ],
    "answer": "B",
    "explanation": "GPGPU（General-Purpose computing on Graphics Processing Units）は、グラフィックス処理以外の一般的な並列計算にGPUを活用する技術。CUDAはNVIDIAのGPGPUプラットフォームの一つ。"
  },
  {
    "id": "ap2020autumn_am_08",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 8,
    "category": "コンピュータシステム",
    "subcategory": "フラッシュメモリ",
    "difficulty": 3,
    "question": "NAND型フラッシュメモリの特徴として適切なものはどれか。",
    "choices": [
      "バイト単位での書き書きが可能",
      "書き込み前にブロック消去が必要",
      "無制限に書き込みが可能",
      "電源を切ってもデータが消えない"
    ],
    "answer": "B",
    "explanation": "NAND型フラッシュメモリは、新しいデータを書き込む前に、まず該当ブロックを消去（Erase）する必要がある。これはNANDフラッシュの基本的な仕組みであり、書き込み性能に影響する。"
  },
  {
    "id": "ap2020autumn_am_09",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 9,
    "category": "技術要素",
    "subcategory": "IPv6",
    "difficulty": 3,
    "question": "IPv6アドレスの表記法として適切なものはどれか。",
    "choices": [
      "192.168.1.1",
      "2001:db8::1",
      "00:11:22:33:44:55",
      "255.255.255.0"
    ],
    "answer": "B",
    "explanation": "IPv6アドレスは128ビットで構成され、16進数で8グループに分けてコロンで区切って表記する。「2001:db8::1」は適切なIPv6アドレスの表記例。"
  },
  {
    "id": "ap2020autumn_am_10",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 10,
    "category": "技術要素",
    "subcategory": "DNS",
    "difficulty": 2,
    "question": "DNS（Domain Name System）の主な機能として適切なものはどれか。",
    "choices": [
      "ドメイン名とIPアドレスの相互変換",
      "メールの送受信",
      "Webページの表示",
      "ファイルの共有"
    ],
    "answer": "A",
    "explanation": "DNS（Domain Name System）は、人間にとって読みやすいドメイン名（例：example.com）と、コンピュータが使用するIPアドレスを相互変換するシステム。"
  },
  {
    "id": "ap2020autumn_am_11",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 11,
    "category": "技術要素",
    "subcategory": "NoSQL",
    "difficulty": 3,
    "question": "NoSQLデータベースの種類で、ドキュメント型の代表例として適切なものはどれか。",
    "choices": [
      "Redis",
      "MongoDB",
      "Cassandra",
      "Neo4j"
    ],
    "answer": "B",
    "explanation": "MongoDBはドキュメント型のNoSQLデータベースの代表例。JSONライクなドキュメントを格納する。RedisはKVS、Cassandraは列指向、Neo4jはグラフ型データベース。"
  },
  {
    "id": "ap2020autumn_am_12",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 12,
    "category": "技術要素",
    "subcategory": "HTTPステータスコード",
    "difficulty": 2,
    "question": "HTTPステータスコード404が示す意味として適切なものはどれか。",
    "choices": [
      "サーバー内部エラー",
      "リクエストされたリソースが見つからない",
      "アクセスが禁止されている",
      "リクエストが成功した"
    ],
    "answer": "B",
    "explanation": "HTTPステータスコード404は「Not Found」を意味し、クライアントがリクエストしたリソース（URL）がサーバー上に存在しないことを示す。"
  },
  {
    "id": "ap2020autumn_am_13",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 13,
    "category": "技術要素",
    "subcategory": "データベース正規化",
    "difficulty": 4,
    "question": "第3正規形（3NF）を満たすための条件として適切なものはどれか。",
    "choices": [
      "部分関数従属性を排除する",
      "推移関数従属性を排除する",
      "多値属性を排除する",
      "繰り返しグループを排除する"
    ],
    "answer": "B",
    "explanation": "第3正規形は、第2正規形を満たし、かつ推移関数従属性がない状態。推移関数従属性とは、非キー属性が主キー以外の属性を通じて間接的に決まる関係。"
  },
  {
    "id": "ap2020autumn_am_14",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 14,
    "category": "プログラミング",
    "subcategory": "関数型プログラミング",
    "difficulty": 3,
    "question": "関数型プログラミングの特徴として適切なものはどれか。",
    "choices": [
      "状態を変更するオブジェクトを中心に設計する",
      "関数を第一級オブジェクトとして扱い、副作用を避ける",
      "継承とポリモーフィズムを多用する",
      "手続き型プログラミングを基本とする"
    ],
    "answer": "B",
    "explanation": "関数型プログラミングの主な特徴は、関数を第一級オブジェクトとして扱うこと（引数や戻り値として渡せる）、副作用を避けること、不変性を重視すること。"
  },
  {
    "id": "ap2020autumn_am_15",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 15,
    "category": "プログラミング",
    "subcategory": "再帰",
    "difficulty": 3,
    "question": "再帰関数でn!（nの階乗）を計算する場合の基底条件として適切なものはどれか。",
    "choices": [
      "n == 1のとき、return n",
      "n == 0のとき、return 1",
      "n < 0のとき、return 0",
      "n > 10のとき、return -1"
    ],
    "answer": "B",
    "explanation": "階乗の定義により0! = 1であり、再帰関数で階乗を計算する際の基底条件は「n == 0のとき、return 1」が適切。これにより1! = 1×1 = 1、n! = n×(n-1)!が正しく計算される。"
  },
  {
    "id": "ap2020autumn_am_16",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 16,
    "category": "システム設計",
    "subcategory": "モジュール結合度",
    "difficulty": 3,
    "question": "ソフトウェア設計におけるモジュール間の結合度で、最も結合度が強いものはどれか。",
    "choices": [
      "内容結合",
      "共通結合",
      "外部結合",
      "制御結合"
    ],
    "answer": "A",
    "explanation": "内容結合は、あるモジュールが他のモジュールの内部データや実装詳細を直接参照する結合で、最も強い結合度を持つ。モジュールの独立性を損なうため避けるべき結合。"
  },
  {
    "id": "ap2020autumn_am_17",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 17,
    "category": "システム設計",
    "subcategory": "アーキテクチャパターン",
    "difficulty": 4,
    "question": "MVC（Model-View-Controller）アーキテクチャパターンにおいて、Modelの主な役割として適切なものはどれか。",
    "choices": [
      "ユーザーインターフェースの表示制御",
      "ユーザーからの入力処理とイベント制御",
      "アプリケーションのビジネスロジックとデータ管理",
      "システムのコンフィグレーション管理"
    ],
    "answer": "C",
    "explanation": "MVCパターンではModelがアプリケーションのビジネスロジックとデータ管理を担当し、ViewがUI表示、Controllerが入力処理と制御を行う。これにより関心の分離が実現される。"
  },
  {
    "id": "ap2020autumn_am_18",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 18,
    "category": "マネジメント",
    "subcategory": "アジャイル開発",
    "difficulty": 3,
    "question": "アジャイル開発手法の特徴として適切なものはどれか。",
    "choices": [
      "最初に詳細な仕様書を作成する",
      "短いイテレーションで漸進的にソフトウェアを開発する",
      "変更を最小限に抑えるために固定的なプランに従う",
      "ドキュメントの作成を特に重視する"
    ],
    "answer": "B",
    "explanation": "アジャイル開発の特徴は、短い反復サイクル（イテレーション、スプリント）で漸進的にソフトウェアを開発し、顧客のフィードバックを早期に取り入れること。"
  },
  {
    "id": "ap2020autumn_am_19",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 19,
    "category": "マネジメント",
    "subcategory": "リスク管理",
    "difficulty": 2,
    "question": "プロジェクトにおけるリスク対応戦略のうち、リスクの発生確率を下げる活動を何と呼ぶか。",
    "choices": [
      "リスク回避",
      "リスク载減",
      "リスク受容",
      "リスク移転"
    ],
    "answer": "B",
    "explanation": "リスク载減は、リスクの発生確率や影響度を下げるための予防的な活動。例えばテスト強化、技術的検証、プロトタイプ作成などがある。"
  },
  {
    "id": "ap2020autumn_am_20",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 20,
    "category": "経営戦略・企業と法務",
    "subcategory": "個人情報保護法",
    "difficulty": 2,
    "question": "個人情報保護法における個人情報の定義として適切なものはどれか。",
    "choices": [
      "生存する個人に関する情報であって、特定の個人を識別できるもの",
      "企業が保有するすべての情報",
      "コンピュータで処理された情報のみ",
      "公開された情報のみ"
    ],
    "answer": "A",
    "explanation": "個人情報保護法では、個人情報を「生存する個人に関する情報であって、特定の個人を識別することができるもの」と定義している。氏名、生年月日、住所などが含まれる。"
  },
  {
    "id": "ap2020spring_pm_03",
    "year": 2020,
    "season": "spring",
    "section": "afternoon",
    "number": 3,
    "category": "システム設計",
    "subcategory": "パフォーマンス設計",
    "difficulty": 4,
    "question": "Webシステムのパフォーマンス改善のために、CDN（Content Delivery Network）を導入する主な目的として適切なものはどれか。",
    "choices": [
      "データベースの処理速度を向上させる",
      "ユーザーに近いサーバーからコンテンツを配信してレスポンス時間を短縮する",
      "サーバーのセキュリティを強化する",
      "ソースコードの品質を向上させる"
    ],
    "answer": "B",
    "explanation": "CDNは、地理的に分散されたサーバーネットワークで、ユーザーに最も近いサーバーからコンテンツを配信することで、ネットワークレイテンシを減らし、レスポンス時間を短縮し、サーバー負荷を分散させる。"
  },
  {
    "id": "ap2020autumn_pm_01",
    "year": 2020,
    "season": "autumn",
    "section": "afternoon",
    "number": 1,
    "category": "プログラミング",
    "subcategory": "アルゴリズム設計",
    "difficulty": 5,
    "question": "最短経路問題を解くアルゴリズムとして、負の重みを持つエッジが存在するグラフにも対応できるものはどれか。",
    "choices": [
      "ダイクストラ法",
      "ベルマンフォード法",
      "プリム法",
      "クラスカル法"
    ],
    "answer": "B",
    "explanation": "ベルマンフォード法は負の重みを持つエッジがあるグラフにも対応できる最短経路アルゴリズム。ダイクストラ法は非負の重みのみ、プリム法とクラスカル法は最小全域木のアルゴリズム。"
  },
  {
    "id": "ap2020autumn_pm_02",
    "year": 2020,
    "season": "autumn",
    "section": "afternoon",
    "number": 2,
    "category": "システム設計",
    "subcategory": "マイクロサービスアーキテクチャ",
    "difficulty": 4,
    "question": "マイクロサービスアーキテクチャでサービス間通信に障害が発生した場合の耐障害性を高めるパターンとして適切なものはどれか。",
    "choices": [
      "サーキットブレーカーパターン",
      "シングルトンパターン",
      "オブザーバーパターン",
      "コマンドパターン"
    ],
    "answer": "A",
    "explanation": "サーキットブレーカーパターンは、外部サービスが利用不可になったときに、そのサービスへの呼び出しを一時的に停止し、システム全体の障害を防ぐ耐障害性パターン。"
  },
  {
    "id": "ap2020spring_am_46",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 46,
    "category": "基礎理論",
    "subcategory": "数学的最適化",
    "difficulty": 4,
    "question": "線形計画法（Linear Programming）で解くことができる問題の特徴として適切なものはどれか。",
    "choices": [
      "目的関数が非線形である",
      "目的関数と制約条件がすべて線形である",
      "変数が整数値でなければならない",
      "制約条件が存在しない"
    ],
    "answer": "B",
    "explanation": "線形計画法は、目的関数（最大化または最小化したい関数）とすべての制約条件が線形である最適化問題を解く手法。変数は連続値であっても構わない。"
  },
  {
    "id": "ap2020spring_am_47",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 47,
    "category": "基礎理論",
    "subcategory": "ゲーム理論",
    "difficulty": 4,
    "question": "ゲーム理論でゼロサムゲームの特徴として適切なものはどれか。",
    "choices": [
      "全プレイヤーの利益の合計がゼロになる",
      "すべてのプレイヤーが同じ利益を得る",
      "最適戦略が存在しない",
      "ゲームの結果がランダムに決まる"
    ],
    "answer": "A",
    "explanation": "ゼロサムゲームは、あるプレイヤーの利益が他のプレイヤーの損失と完全に一致するゲームで、全プレイヤーの利益の合計が常にゼロになる。代表例はポーカーや将棋など。"
  },
  {
    "id": "ap2020spring_am_48",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 48,
    "category": "コンピュータシステム",
    "subcategory": "仮想化",
    "difficulty": 3,
    "question": "サーバー仮想化技術のメリットとして適切でないものはどれか。",
    "choices": [
      "サーバーリソースの利用率向上",
      "システムの可用性向上",
      "それぞれのOSで複数のアプリケーションを実行",
      "ハードウェアの統合管理"
    ],
    "answer": "C",
    "explanation": "仮想化のメリットは、リソースの効率的利用、可用性向上、管理の簡素化などである。ただし、1つのOSで複数アプリケーションを実行するのは仮想化ではなく、通常のOSの機能である。"
  },
  {
    "id": "ap2020spring_am_49",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 49,
    "category": "コンピュータシステム",
    "subcategory": "SAN",
    "difficulty": 3,
    "question": "SAN（Storage Area Network）の特徴として適切なものはどれか。",
    "choices": [
      "LANを介してストレージを共有する",
      "ストレージ専用の高速ネットワークでサーバーとストレージを接続",
      "クラウドストレージサービスでのみ利用可能",
      "個人用PCでのみ使用される技術"
    ],
    "answer": "B",
    "explanation": "SAN（Storage Area Network）は、サーバーとストレージを接続するストレージ専用の高速ネットワーク。ファイバーチャネルなSCSIなどのプロトコルが使われ、LANトラフィックと分離されている。"
  },
  {
    "id": "ap2020spring_am_50",
    "year": 2020,
    "season": "spring",
    "section": "morning",
    "number": 50,
    "category": "技術要素",
    "subcategory": "Docker",
    "difficulty": 3,
    "question": "Dockerコンテナ技術の特徴として適切なものはどれか。",
    "choices": [
      "仮想マシンよりもリソース消費が大きい",
      "ホストOSとカーネルを共有し、軽量で高速起動",
      "独立したOSを各コンテナで実行する",
      "GUIアプリケーションのみで使用可能"
    ],
    "answer": "B",
    "explanation": "Dockerコンテナは、ホストOSのカーネルを共有し、OS全体を仮想化しないため、仮想マシンよりも軽量で高速起動できる。アプリケーションとその依存関係をパッケージ化して実行する。"
  },
  {
    "id": "ap2020autumn_am_21",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 21,
    "category": "技術要素",
    "subcategory": "Blockchain",
    "difficulty": 3,
    "question": "ブロックチェーン技術の特徴として適切なものはどれか。",
    "choices": [
      "中央集中的なサーバーでデータを管理する",
      "分散台帳技術で、データの改ざんが困難",
      "データの暗号化は不可能",
      "リアルタイム処理に特化された技術"
    ],
    "answer": "B",
    "explanation": "ブロックチェーンは、分散台帳（Distributed Ledger）技術の一種で、データをブロック単位でチェーン状に連結し、暗号学的ハッシュで保護することで、データの改ざんや不正を極めて困難にしている。"
  },
  {
    "id": "ap2020autumn_am_22",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 22,
    "category": "技術要素",
    "subcategory": "AI/ML",
    "difficulty": 3,
    "question": "機械学習の種類で、正解ラベルが与えられたデータでモデルを訓練する手法を何と呼ぶか。",
    "choices": [
      "教師あり学習（督者あり学習）",
      "教師なし学習（異訓練学習）",
      "強化学習",
      "ディープラーニング"
    ],
    "answer": "A",
    "explanation": "教師あり学習（Supervised Learning）は、正解ラベルが付いた訓練データを使ってモデルを訓練する手法。分類や回帰問題に使用される。教師なし学習はラベルなしデータでパターンを発見する。"
  },
  {
    "id": "ap2020autumn_am_23",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 23,
    "category": "技術要素",
    "subcategory": "IoT",
    "difficulty": 2,
    "question": "IoT（Internet of Things）システムで使用される範囲が広い通信プロトコルとして適切なものはどれか。",
    "choices": [
      "HTTP",
      "MQTT",
      "FTP",
      "SMTP"
    ],
    "answer": "B",
    "explanation": "MQTT（Message Queuing Telemetry Transport）は、軽量で低帯域・高レイテンシ環境に適したPublish-Subscribe型のメッセージングプロトコルで、IoTデバイス間の通信に幅広く使用される。"
  },
  {
    "id": "ap2020autumn_am_24",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 24,
    "category": "プログラミング",
    "subcategory": "API設計",
    "difficulty": 4,
    "question": "RESTful APIの設計で、ユーザー情報を取得するAPIエンドポイントとして最も適切なものはどれか。",
    "choices": [
      "POST /users",
      "GET /getUser",
      "GET /users/{id}",
      "PUT /users"
    ],
    "answer": "C",
    "explanation": "RESTful APIの設計原則に従うと、リソースの取得はGETメソッドを使い、URLは名詞で構成し、特定のリソースを指定する場合はパスパラメータでIDを指定する。「GET /users/{id}」が最もRESTfulな設計。"
  },
  {
    "id": "ap2020autumn_am_25",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 25,
    "category": "プログラミング",
    "subcategory": "ユニットテスト",
    "difficulty": 3,
    "question": "ユニットテストでモックオブジェクトを使用する主な目的として適切なものはどれか。",
    "choices": [
      "テストの実行速度を向上させる",
      "外部依存を除去してテスト対象を分離する",
      "プロダクション環境でのテストを可能にする",
      "テストケースの数を減らす"
    ],
    "answer": "B",
    "explanation": "モックオブジェクトは、テスト対象のメソッドが依存する外部コンポーネント（データベース、Web APIなど）を模擬し、テスト対象を分離して独立したテストを可能にするために使用される。"
  },
  {
    "id": "ap2020autumn_am_26",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 26,
    "category": "システム設計",
    "subcategory": "ロードバランサー",
    "difficulty": 3,
    "question": "ロードバランサーのラウンドロビン方式の特徴として適切なものはどれか。",
    "choices": [
      "サーバーの処理能力に応じてリクエストを振り分ける",
      "各サーバーに順番にリクエストを振り分ける",
      "レスポンス時間の短いサーバーを優先する",
      "特定のサーバーに集中してリクエストを送る"
    ],
    "answer": "B",
    "explanation": "ラウンドロビン方式は、各サーバーに順番にリクエストを振り分けるシンプルな手法。実装が容易で、サーバーの性能が同等な場合に効果的だが、各サーバーの負荷や処理能力を考慮しない。"
  },
  {
    "id": "ap2020autumn_am_27",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 27,
    "category": "マネジメント",
    "subcategory": "DevOps",
    "difficulty": 3,
    "question": "DevOpsの概念として適切なものはどれか。",
    "choices": [
      "開発チームと運用チームを完全に分離する",
      "開発から運用までのプロセスを自動化し、継続的なデリバリを実現する",
      "ウォーターフォール型開発を徹底する",
      "ドキュメンテーションを最優先する"
    ],
    "answer": "B",
    "explanation": "DevOpsは、Development（開発）とOperations（運用）を組み合わせた概念で、開発からデプロイメント、運用までのプロセスを自動化し、継続的インテグレーション/デリバリを通じて迅速なリリースを実現する。"
  },
  {
    "id": "ap2020autumn_am_28",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 28,
    "category": "マネジメント",
    "subcategory": "COBIT",
    "difficulty": 3,
    "question": "COBIT（Control Objectives for Information and Related Technology）の主な目的として適切なものはどれか。",
    "choices": [
      "システム開発ライフサイクルの管理",
      "ITガバナンスとIT管理のフレームワーク提供",
      "ソフトウェアの品質保証",
      "プロジェクト管理の標準化"
    ],
    "answer": "B",
    "explanation": "COBITは、組織のITガバナンスとIT管理のための国際的なフレームワークで、IT投資がビジネス目標に整合し、リスク管理され、価値を提供することを目的とする。"
  },
  {
    "id": "ap2020autumn_am_29",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 29,
    "category": "経営戦略・企業と法務",
    "subcategory": "NPV",
    "difficulty": 3,
    "question": "NPV（Net Present Value）を用いたIT投資の評価で、NPVが正の値を示す場合の意味として適切なものはどれか。",
    "choices": [
      "投資は経済的に不利である",
      "投資は経済的に有利である",
      "投資のリスクが高い",
      "投資の回収期間が長い"
    ],
    "answer": "B",
    "explanation": "NPV（正味現在価値）は、将来のキャッシュフローを現在価値に割り引いた値から初期投資額を引いたもの。NPVが正の値であることは、投資から得られるリターンが投資額を上回ることを意味し、経済的に有利な投資である。"
  },
  {
    "id": "ap2020autumn_am_30",
    "year": 2020,
    "season": "autumn",
    "section": "morning",
    "number": 30,
    "category": "経営戦略・企業と法務",
    "subcategory": "特許法",
    "difficulty": 2,
    "question": "日本の特許法において、特許権の存続期間として適切なものはどれか。",
    "choices": [
      "出願日から5年間",
      "出願日から10年間",
      "出願日から15年間",
      "出願日から20年間"
    ],
    "answer": "D",
    "explanation": "日本の特許法では、特許権の存続期間は原則として特許出願日から20年間と定められている。ただし、特定の分野（医薬品など）では延長が認められる場合もある。"
  }
]